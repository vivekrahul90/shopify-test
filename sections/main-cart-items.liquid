{% style %}
  {% if settings.point_img != blank %}
    .shipiing-progress-track .check-point.check-point-first:before{
      background-image:url({{settings.point_img | image_url}});
      background-size: 16px;
      background-repeat: no-repeat;
      background-position: center;
      background-color: #FFF;
      border: 1px solid #534134;
      width: 28px;
      height: 28px;
      top: -20px;
    }
    .shipiing-progress-track .checkpoint-price {
      top: 10px;
    }
  {% endif %}
  {% if settings.point_img_2 != blank %}
    .shipiing-progress-track .check-point:not(.check-point-first):before{
      background-image:url({{settings.point_img_2 | image_url}});
      background-size: 16px;
      background-repeat: no-repeat;
      background-position: center;
      background-color: #FFF;
      border: 1px solid #534134;
      width: 28px;
      height: 28px;
      top: -20px;
    }
    .shipiing-progress-track .checkpoint-price {
      top: 10px;
    }
  {% endif %}
{% endstyle %}
{%- liquid 
  assign name_edt = settings.name_edt
  if settings.name_edt == blank
    assign name_edt = 'general.estimate_delivery' | t
  endif
  assign ratio = 100
  case settings.product_image_ratio
    when "portrait"
      assign ratio = 150
    when "landscape"
      assign ratio = 75
    when "wide"
      assign ratio = 56.25
    when "3/4"
      assign ratio = 133
  endcase
  if settings.lang_direction contains request.locale.iso_code
    assign is_rtl = true
  else
    assign is_rtl = false
  endif
  assign showSideBar = false
  if settings.cart_page_layout == 'side' and settings.show_cart_note or section.blocks.size > 0 or settings.show_cart_custom_field
    assign showSideBar = true
  endif
-%}
<div
  id="main-cart-items"
  class="page-width mx-auto pt-[{{ section.settings.padding_top_mobile }}px] md:pt-[{{ section.settings.padding_top }}px] pb-[{{ section.settings.padding_bottom_mobile }}px] md:pb-[{{ section.settings.padding_bottom }}px]"
  x-intersect.once="$store.xCartAnalytics.viewCart()">
  {%- if cart != empty -%}
    {% liquid
      if settings.show_in_cart_items != 'none'
        assign current_minute = "now" | date: "%M"
        assign current_time_of_day = "now" | date: "%H" | append: current_minute | plus: 0
        assign cutoff_time = settings.estimate_delivery_cutoff_hour | append: settings.estimate_delivery_cutoff_minute | plus: 0
        
        assign date_update = 0
        if current_time_of_day > cutoff_time
          assign date_update = 1
        endif
        assign to_date_seconds = date_update | times: 24 | times: 60 | times: 60
        assign update_date_month = 'now' | date: "%s" | plus: to_date_seconds | date: "%B"
        assign update_date_day = 'now' | date: "%s" | plus: to_date_seconds | date: "%d"
        assign update_date_string = 'date_time.month.' | append: update_date_month | t | append: ' ' | append: update_date_day
        assign is_update_date = true
        if update_date_string == cart.attributes.datetime-updated
          assign is_update_date = false
        endif
      endif
    %}
    {% if settings.show_milestonbar %}
      <div class="shipping-notes-cart_page">
        {% comment %}
          {% if settings.show_mileston_based_on == 'price' %}
            {% render 'price-based-milestone' %}
          {% else %}
            {% render 'quantity-based-milestone' %}
          {% endif %}
        {% endcomment %}
        {% render 'quantity-based-milestone' %}
      </div>
    {% endif %}
   <div class="mb-4 flex justify-between flex-col md:flex-row"{% if is_update_date %} x-init="updateDate(`{{ update_date_string }}`)"{% endif %}>
      <div class="flex items-center">
        <{{ section.settings.heading_tag }} class="flex items-center h2">{{ 'sections.cart.title' | t }} {% if settings.sale_head != blank %}
          {% endif %}</{{ section.settings.heading_tag }}>
        <div class="flex items-center pb-1.5 lg:pb-2">
        <a 
          class="nav-link effect-inline relative hover-text-link leading-normal pt-2.5 lg:pt-3" 
          href="{{ settings.continue_shopping }}">
          {{ 'general.continue_shopping' | t }}
        </a>
      </div>
      </div>
          {% if settings.sale_head != blank %}
            <div class="continuous-timer-main px-4 py-2 flex justify-between items-end text-xs font-semibold rounded-md bg-[rgba(var(--colors-text),0.1)] ml-4" {% if cart == empty %}style="display:none;"{% endif %}>{{ settings.sale_head }} :&nbsp;<div id="continuous_timer" sale_countdown_time_hours="{{ settings.sale_countdown_time_hours }}" sale_countdown_time_minutes="{{ settings.sale_countdown_time_minutes }}"></div></div>
          {% endif %}
    </div>

    {% if settings.show_estimate_cart %}
      {% liquid
        assign hidden_etc = false
        for item in cart.items
          for property in item.properties 
            if property.first == '_preorder' 
              assign hidden_etc = true
            endif 
          endfor
        endfor
      %}
      <div id="x-estimate-delivery-{{ section.id }}" class="mb-5 pt-0.5 pb-0.5{% if hidden_etc %} hidden{% endif %}">
        {%- assign container_id = '#x-estimate-delivery-' | append: section.id -%}
        {%- render 'estimate-delivery-cart',
          items: cart.items,
          message: settings.message_estimate_cart,
          tooltip_text: settings.tooltip_text_cart,
          tooltip_icon: settings.tooltip_icon_cart,
          custom_icon: settings.custom_icon_cart,
          tooltip_message: settings.tooltip_message_cart,
          tooltip_icon_position: settings.tooltip_icon_position_cart,
          container_id: container_id,
          show_background: settings.show_background_estimate_cart,
          box_type: settings.box_type_estimate_cart,
          background_color_light: settings.background_color_light_estimate_cart,
          message_color_light: settings.message_color_light_estimate_cart,
          background_color_dark: settings.background_color_dark_estimate_cart,
          message_color_dark: settings.message_color_dark_estimate_cart,
          bg_tooltip_color_light: settings.bg_tooltip_color_light_estimate_cart,
          tooltip_color_light: settings.tooltip_color_light_estimate_cart,
          bg_tooltip_color_dark: settings.bg_tooltip_color_dark_estimate_cart,
          tooltip_color_dark: settings.tooltip_color_dark_estimate_cart
        -%}
      </div>
    {% endif %}
    {% if settings.show_in_cart_items == 'show_cart' %}
      {%- liquid
        assign is_update_date = true
        assign market = localization.country.iso_code
        assign delivery_date_min_global = 0
        assign delivery_date_min_custom = 0
        assign check_data_min_global = false
      
        assign delivery_date_max_global = 0
        assign delivery_date_max_custom = 0
        assign check_data_max_global = false
        assign message = settings.message_estimate_cart
        for item in cart.items
          if item.product.metafields.custom.delivery_date_min != blank
          
            if item.product.metafields.custom.delivery_date_min contains ';'
              assign estimate_mins = item.product.metafields.custom.delivery_date_min | split: ";"
              for estimate_min in estimate_mins
                assign code_market_min_custom = estimate_min | split: ":" | first | remove: " "
                assign min_custom_value_market = estimate_min | split: ":" | last
      
                if code_market_min_custom == market
                  assign delivery_date_min_custom_item = min_custom_value_market | plus: 0
                endif 
              endfor
            else
              if item.product.metafields.custom.delivery_date_min contains ':'
                assign code_market_min_custom = item.product.metafields.custom.delivery_date_min | split: ":" | first | remove: " "
                assign min_custom_value_market = item.product.metafields.custom.delivery_date_min | split: ":" | last
      
                if code_market_min == market
                  assign delivery_date_min_custom_item = min_custom_value_market | plus: 0
                endif 
              else
                assign delivery_date_min_custom_item = item.product.metafields.custom.delivery_date_min | plus: 0
              endif 
            endif
      
            if delivery_date_min_custom_item > delivery_date_min_custom 
              assign delivery_date_min_custom = delivery_date_min_custom_item
            endif 
          else 
            assign check_data_min_global = true
          endif 
      
          if item.product.metafields.custom.delivery_date_max != blank
            if item.product.metafields.custom.delivery_date_max contains ';'
              assign estimate_maxs = item.product.metafields.custom.delivery_date_max | split: ";"
              for estimate_max in estimate_maxs
                assign code_market_max_custom = estimate_max | split: ":" | first | remove: " "
                assign max_custom_value_market = estimate_max | split: ":" | last
      
                if code_market_max_custom == market
                  assign delivery_date_max_custom_item = max_custom_value_market | plus: 0
                endif 
              endfor
            else
              if item.product.metafields.custom.delivery_date_max contains ':'
                assign code_market_max_custom = item.product.metafields.custom.delivery_date_max | split: ":" | first | remove: " "
                assign max_custom_value_market = item.product.metafields.custom.delivery_date_max | split: ":" | last
      
                if code_market_max == market
                  assign delivery_date_max_custom_item = max_custom_value_market | plus: 0
                endif 
              else
                assign delivery_date_max_custom_item = item.product.metafields.custom.delivery_date_max | plus: 0
              endif 
            endif
      
            if delivery_date_max_custom_item > delivery_date_max_custom 
              assign delivery_date_max_custom = delivery_date_max_custom_item
            endif 
          else 
            assign check_data_max_global = true
          endif 
        endfor
      
        if check_data_min_global
          if settings.estimate_delivery_min contains ';'
            assign estimate_mins = settings.estimate_delivery_min | split: ";"
            for estimate_min in estimate_mins
              assign code_market_min_global = estimate_min | split: ":" | first | remove: " "
              assign min_global_value_market = estimate_min | split: ":" | last
      
              if code_market_min_global == market
                assign delivery_date_min_global = min_global_value_market | plus: 0
              endif 
            endfor
          else
            if settings.estimate_delivery_min contains ':'
              assign code_market_min_global = settings.estimate_delivery_min | split: ":" | first | remove: " "
              assign min_global_value_market = settings.estimate_delivery_min | split: ":" | last
      
              if code_market_min_global == market
                assign delivery_date_min_global = min_global_value_market | plus: 0
              endif 
            else
              assign delivery_date_min_global = settings.estimate_delivery_min | plus: 0
            endif 
          endif
        endif 
      
        assign delivery_date_min = delivery_date_min_global
        if delivery_date_min_custom > delivery_date_min_global
          assign delivery_date_min = delivery_date_min_custom
        endif 
      
        if check_data_max_global
          if settings.estimate_delivery_max contains ';'
            assign estimate_maxs = settings.estimate_delivery_max | split: ";"
            for estimate_max in estimate_maxs
              assign code_market_max_global = estimate_max | split: ":" | first | remove: " "
              assign max_global_value_market = estimate_max | split: ":" | last
      
              if code_market_max_global == market
                assign delivery_date_max_global = max_global_value_market | plus: 0
              endif 
            endfor
          else
            if settings.estimate_delivery_max contains ':'
              assign code_market_max_global = settings.estimate_delivery_max | split: ":" | first | remove: " "
              assign max_global_value_market = settings.estimate_delivery_max | split: ":" | last
      
              if code_market_max_global == market
                assign delivery_date_max_global = max_global_value_market | plus: 0
              endif 
            else
              assign delivery_date_max_global = settings.estimate_delivery_max | plus: 0
            endif 
          endif
        endif 
      
        assign delivery_date_max = delivery_date_max_global
        if delivery_date_max_custom > delivery_date_max_global
          assign delivery_date_max = delivery_date_max_custom
        endif 
        
        assign current_minute = "now" | date: "%M"
        assign current_time_of_day = "now" | date: "%H" | append: current_minute | plus: 0
        assign cutoff_time = settings.estimate_delivery_cutoff_hour | append: settings.estimate_delivery_cutoff_minute | plus: 0
      
        if current_time_of_day > cutoff_time
          assign delivery_date_min = delivery_date_min | plus: 1
          assign delivery_date_max = delivery_date_max | plus: 1
        endif
      
        assign to_min_date_seconds = delivery_date_min | times: 24 | times: 60 | times: 60
        assign to_max_date_seconds = delivery_date_max | times: 24 | times: 60 | times: 60
      
        assign min_date_month = 'now' | date: "%s" | plus: to_min_date_seconds | date: "%B"
        assign min_date_day = 'now' | date: "%s" | plus: to_min_date_seconds | date: "%d"      
        assign max_date_month = 'now' | date: "%s" | plus: to_max_date_seconds | date: "%B"
        assign max_date_day = 'now' | date: "%s" | plus: to_max_date_seconds | date: "%d"

        assign min_date_month_format =  'date_time.month.' | append: min_date_month | t
        assign max_date_month_format =  'date_time.month.' | append: max_date_month | t

        assign min_date_string = min_date_month_format | append: ' ' | append: min_date_day
        assign max_date_string = max_date_month_format | append: ' ' | append: max_date_day
        if settings.date_format_estimate_cart == 'dd-mm'
           assign min_date_string = min_date_day | append: ' ' | append: min_date_month_format
           assign max_date_string = max_date_day | append: ' ' | append: max_date_month_format
        endif  
      
        assign message_update = message | replace: 'earliest_delivery_date', min_date_string | replace: 'latest_delivery_date', max_date_string | replace: 'delivery_tooltip', '' | replace: 'Delivery_tooltip', '' | strip_html
      -%}
    {% endif %}
    <div class="items-end md:items-start flex flex-col lg:flex-row lg:gap-10">
      <div class="w-full{% if showSideBar %} lg:w-3/4{% endif %}">
        <form
          action="{{ routes.cart_url }}"
          method="post"
          id="cart"
          class="relative"
          x-data="xCart">
          <table class="w-full{% if is_rtl %} text-right{% else %} text-left{% endif %} cart-items">
            <thead>
              <tr class=" border-b justify-between flex md:table-row">
                <th
                  class="pb-1.5 md:w-6/12"
                  colspan="2"
                  scope="col">
                  <span>{{ 'sections.cart.headings.product' | t }}</span>
                </th>
                <th
                  class="pb-1.5 hidden md:table-cell md:w-2/12"
                  colspan="1"
                  scope="col">
                  <span>{{ 'sections.cart.headings.price' | t }}</span>
                </th>
                <th
                  class="pb-1.5 md:hidden"
                  colspan="1"
                  scope="col">
                  <span>{{ 'sections.cart.headings.total' | t }}</span>
                </th> 
                <th
                  class="pb-1.5 hidden md:table-cell md:w-2/12 lg:pl-2"
                  colspan="1"
                  scope="col">
                  <span>{{ 'sections.cart.headings.quantity' | t }}</span>
                </th>
                <th
                  class="pb-1.5 hidden md:table-cell md:w-2/12 lg:pl-2"
                  colspan="1"
                  scope="col">
                  <span>{{ 'sections.cart.headings.total' | t }}</span>
                </th>
              </tr>
            </thead>
            <tbody>
              {%- for item in cart.items -%}
                {% assign hideatc = false %}
                {% if item.product.tags contains 'noatc' %}
                {% assign hideatc = true %}
                {% endif %}
                {% if settings.show_in_cart_items == 'show_item' %}
                  {% liquid 
                    assign message = settings.message_estimate_cart
                    assign market = localization.country.iso_code
                    assign data_min = settings.estimate_delivery_min
                    if item.product.metafields.custom.delivery_date_min != blank
                      assign data_min = item.product.metafields.custom.delivery_date_min
                    endif 
                  
                    if data_min contains ';'
                      assign estimate_mins = data_min | split: ";"
                      for estimate_min in estimate_mins
                        assign code_market_min = estimate_min | split: ":" | first | remove: " "
                        assign min_value_market = estimate_min | split: ":" | last
                  
                        if code_market_min == market
                          assign delivery_date_min = min_value_market | plus: 0
                        endif 
                      endfor
                    else
                      if data_min contains ':'
                        assign code_market_min = data_min | split: ":" | first | remove: " "
                        assign min_value_market = data_min | split: ":" | last
                  
                        if code_market_min == market
                          assign delivery_date_min = min_value_market | plus: 0
                        endif 
                      else
                        assign delivery_date_min = data_min | plus: 0
                      endif 
                    endif
                
                    assign data_max = settings.estimate_delivery_max
                    if item.product.metafields.custom.delivery_date_max != blank
                      assign data_max = item.product.metafields.custom.delivery_date_max
                    endif 
                  
                    if data_max contains ';'
                      assign estimate_maxs = data_max | split: ";"
                      for estimate_max in estimate_maxs
                        assign code_market_max = estimate_max | split: ":" | first | remove: " "
                        assign max_value_market = estimate_max | split: ":" | last
                  
                        if code_market_max == market
                          assign delivery_date_max = max_value_market | plus: 0
                        endif 
                      endfor
                    else
                      if data_max contains ':'
                        assign code_market_max = data_max | split: ":" | first | remove: " "
                        assign max_value_market = data_max | split: ":" | last
                  
                        if code_market_max == market
                          assign delivery_date_max = max_value_market | plus: 0
                        endif 
                      else
                        assign delivery_date_max = data_max | plus: 0
                      endif 
                    endif
                  
                    assign mtf_message = item.product.metafields.custom.delivery_date_message | metafield_text | strip
                    if mtf_message != ''
                      assign message = item.product.metafields.custom.delivery_date_message | metafield_tag
                    endif
                
                    assign current_minute = "now" | date: "%M"
                    assign current_time_of_day = "now" | date: "%H" | append: current_minute | plus: 0
                    assign cutoff_time = settings.estimate_delivery_cutoff_hour | append: settings.estimate_delivery_cutoff_minute | plus: 0
                  
                    if current_time_of_day > cutoff_time
                      assign delivery_date_min = delivery_date_min | plus: 1
                      assign delivery_date_max = delivery_date_max | plus: 1
                    endif
                  
                    assign to_min_date_seconds = delivery_date_min | times: 24 | times: 60 | times: 60
                    assign to_max_date_seconds = delivery_date_max | times: 24 | times: 60 | times: 60
                  
                    assign min_date_month = 'now' | date: "%s" | plus: to_min_date_seconds | date: "%B"
                    assign min_date_day = 'now' | date: "%s" | plus: to_min_date_seconds | date: "%d"                  
                    assign max_date_month = 'now' | date: "%s" | plus: to_max_date_seconds | date: "%B"
                    assign max_date_day = 'now' | date: "%s" | plus: to_max_date_seconds | date: "%d"

                    assign min_date_month_format =  'date_time.month.' | append: min_date_month | t
                    assign max_date_month_format =  'date_time.month.' | append: max_date_month | t

                    assign min_date_string = min_date_month_format | append: ' ' | append: min_date_day
                    assign max_date_string = max_date_month_format | append: ' ' | append: max_date_day
                    if settings.date_format_estimate_cart == 'dd-mm'
                       assign min_date_string = min_date_day | append: ' ' | append: min_date_month_format
                       assign max_date_string = max_date_day | append: ' ' | append: max_date_month_format
                    endif
  
                    assign message_update = message | replace: 'earliest_delivery_date', min_date_string | replace: 'latest_delivery_date', max_date_string | replace: 'delivery_tooltip', '' | replace: 'Delivery_tooltip', '' | strip_html
                    
                    for property in item.properties 
                      if property.first == name_edt
                        if property.last != message_update 
                          assign is_update_date = true
                        endif
                      endif 
                    endfor
                  %}
                {% endif %}
                {% if is_update_date %}
                  {%- capture properties -%}
                    {
                      {%- for property in item.properties -%}
                        {%- assign property_first_char = property.first | slice: 0 -%}
                        {%- if property.last != blank -%}
                          {% if property.first == name_edt %}
                            "{{ name_edt }}": "{{ message_update }}"
                          {% else %}
                          "{{ property.first }}": "{{ property.last }}"{% unless forloop.last %},{% endunless %}
                          {% endif %}
                        {%- endif -%}
                      {%- endfor -%}
                    }
                  {%- endcapture -%}
                {% endif %}

                {% assign subitem = false %}
                {% if item.properties['_certificate_item'] == 'sub' %}
                  {% assign subitem = true %}
                {% endif %}
                
                {% unless subitem %}
                
                {% if item.properties['_certificate_item'] == 'main' %}
                  {% assign hasproperties = true %}  
                  {% assign bundleid = item.properties['_bundleid'] %}  
                  {% for newitem in cart.items %}
                    {% if newitem.properties['_certificate_item'] == 'sub' and newitem.properties['_bundleid'] == bundleid %}
                      {% assign subitem_data = newitem %}
                      {% assign itemindex = forloop.index %}
                    {% endif %}
                  {% endfor %}
                {% endif %} 
                
                <tr class="cart-item pid-{{ item.product.id }} {% for tag in item.product.tags %}{% if tag == 'noqty' %}noqty{% endif %}{% endfor %} border-b lg:gap-4 grid grid-cols-4 md:table-row auto-rows-auto relative itemid_{{ item.id }} {% if hasproperties %} hasproperties {% endif %}" {% if hasproperties %}data-bundleid="{{ bundleid }}" data-itemindex="{{ itemindex }}" data-actualqty="{{ subitem_data.properties['_mainqty'] }}" data-currentqty="{{ subitem_data.quantity }}" data-itemkey="{{ subitem_data.key }}"{% endif %} id="CartItem-{{ item.index | plus: 1 }}"{% if is_update_date %} x-init="updateEstimateShipping($el, `{{ item.index | plus: 1 }}`, `{{ item.key }}`)" x-data-properties="{{ properties | escape }}"{% endif %}>
                  <td class="md:w-1/12 pt-7 pb-0 md:pt-5 md:pb-5 col-start-1 col-end-1 align-top">
                    <div class="relative w-full md:w-32 float-left before:h-0 before:block{% unless settings.product_image_ratio == "natural" %} before:pb-[{{ ratio }}%]{% endunless %}" {% if settings.product_image_ratio == "natural" and item.image %}style="padding-bottom: {{ 1 | divided_by: item.image.aspect_ratio | times: 100 }}%;"{% endif %}>
                      <a href="{{ item.url }}" class="absolute top-0 left-0 disable-effect w-full h-full overflow-hidden{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}" aria-label="{{ 'general.cart.item_added' | t }}">
                        {%- if item.image -%}
                          <img 
                            src="{{ item.image | image_url: width: 300 }}"
                            class="object-cover h-full w-full top-0 left-0 absolute duration-300 image-hover z-0"
                            alt="{{ item.image.alt | escape }}"
                            loading="lazy"
                            width="150"
                            height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}">
                        {%- else -%}
                          <div class='bg-[#c9c9c9] flex{% unless settings.product_image_ratio == "natural" %} absolute{% endunless %} top-0 left-0 w-full h-full items-center'>
                            {% render 'icon-placeholder', icon: 'icon-product' | class: 'w-full h-full' %}
                          </div>
                        {%- endif -%}
                      </a>
                    </div>
                  </td>
                  <td class="md:w-5/12 pt-7 pb-0 px-4 md:pt-5 md:pb-5{% if is_rtl %} lg:pr-9 lg:pl-14{% else %} lg:pl-9 lg:pr-14{% endif %} col-start-2 col-end-4 align-top">
                    {%- if settings.cart_show_vendor -%}
                      <p class="mb-2 text-normal uppercase p-break-words">{{ item.product.vendor }}</p>
                    {%- endif -%}
                    <div>
                      <a href="{{ item.url }}" class="text-[rgba(var(--colors-heading))] table mb-2 disable-effect hover-text-link p-break-words">
                        {{ item.product.title | escape }}
                      </a>

                    <!--  <div class="price mb-1 md:hidden">
                        {%- if subitem_data != blank -%}
                          {% assign compareat = item.variant.compare_at_price | plus: subitem_data.variant.compare_at_price %}
                          {% assign originalprice = item.original_price | plus: subitem_data.original_price %}
                          {% assign originallineprice = item.original_line_price | plus: subitem_data.original_line_price %}
                          {% assign finallineprice = item.final_price | plus: subitem_data.final_price %}
                          {% assign unitprice = item.variant.unit_price | plus: subitem_data.variant.unit_price %}
                        {%- else -%}
                          {% assign compareat = item.variant.compare_at_price %}
                          {% assign originalprice = item.original_price %}
                          {% assign originallineprice = item.original_line_price %}
                          {% assign finallineprice = item.final_price %}
                          {% assign unitprice = item.variant.unit_price %}
                        {%- endif -%}
                        
                        {%- assign item_original_price = compareat | default: originalprice -%}
                        {%- if item_original_price > finallineprice -%}
                          <span class="selection:bg-text-[rgb(var(--colors-price-sale),0.2)] price-sale mr-1">
                            {% if settings.currency_code_enable %}
                              {{- finallineprice | money_with_currency -}}
                            {% else %}
                              {{ finallineprice | money }}
                            {% endif %}
                          </span>
                          <s class="cap  rtl:ml-1 rtl:mr-0 inline-block opacity-50">{%- if settings.currency_code_enable %}{{- item_original_price | money_with_currency -}}{%- else -%}{{ item_original_price | money }}{%- endif -%}</s> 
                          
                        {%- else -%}
                          <span class="price">
                            {% if settings.currency_code_enable %}
                              {{- finallineprice | money_with_currency -}}
                            {% else %}
                              {{ finallineprice | money }}
                            {% endif %}
                          </span>
                        {%- endif -%}
                        {%- if item.variant.available and item.unit_price_measurement -%}
                          <br />
                          <small>
                            {{ unitprice | money }}
                            <span aria-hidden="true">/</span>
                            {%- if item.variant.unit_price_measurement.reference_value != 1 -%}
                              {{- item.variant.unit_price_measurement.reference_value -}}
                            {%- endif -%}
                            {{ item.variant.unit_price_measurement.reference_unit }}
                          </small>
                        {%- endif -%}
                      </div> -->
                    </div>
                    {%- if item.product.has_only_default_variant == false or item.properties.size != 0 or item.selling_plan_allocation != nil -%}
                      <dl class="text-normal">
                        {%- if item.product.has_only_default_variant == false -%}
                          {%- for option in item.options_with_values -%}
                            <div class="mt-1 p-break-words">
                              <dt class="inline-block">{{ option.name }}:
                              </dt>
                              <dd class="inline-block">{{ option.value }}</dd>
                            </div>
                          {%- endfor -%}
                        {%- endif -%}
                        {%- for property in item.properties -%}
                          {%- assign property_first_char = property.first | slice: 0 -%}
                          {%- if property.last != blank and property_first_char != '_' -%}
                            <div class="p-break-words mt-1 {% if property.first == 'Add certificate for ₹50' %}certificate_product_prop{% endif %}">
                            {% if property.first == 'Add certificate for ₹50' %}
                              <span class="loader_main">                                          
                              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" width="200" height="200" xmlns:xlink="http://www.w3.org/1999/xlink"><g><circle stroke-dasharray="164.93361431346415 56.97787143782138" r="35" stroke-width="10" stroke="#000000" fill="none" cy="50" cx="50">
                                <animateTransform keyTimes="0;1" values="0 50 50;360 50 50" dur="1s" repeatCount="indefinite" type="rotate" attributeName="transform"></animateTransform>
                                </circle><g></g></g><!-- [ldio] generated by https://loading.io -->
                              </svg>
                            </span>
                            <input type="checkbox" id="certificate_item_properties" {% if item.properties['_certificate_item'].last != blank %}checked="checked"{% endif %} data-bundleid="{{ item.properties['_bundleid'].last }}" data-subitemkey="{{ subitem_data.key }}" data-subitemindex="{{ subitem_data.index | plus: 1 }}" data-subitemtitle="{{ item.title }}" data-vitemprop="{{ item.properties['_previtemid'] }}" data-mainitempid="{{ item.product.id }}" data-mainitemkey="{{ item.key }}" data-prevcertiid="{{ subitem_data.id }}" data-mainitemqty="{{ item.quantity }}">
                            <label for="certificate_item_properties">
                              <dt class="inline-block p-break-words">{{ property.first }}:
                              </dt>
                              <dd class="inline-block p-break-words">
                                {%- if property.last contains '/uploads/' -%}
                                  <a
                                    href="{{ property.last }}"
                                    class="hover-text-link inline"
                                  >
                                    {{ 'products.product.file' | t }}
                                  </a>
                                {%- else -%}
                                  {% if property.first == name_edt and is_update_date %}
                                    {{ message_update }}
                                  {% else %}
                                    {{ property.last }}
                                  {% endif %}
                                {%- endif -%}
                              </dd>                          
                            </label>                                        
                            {% else %}
                              <dt class="inline-block p-break-words">{{ property.first }}:
                              </dt>
                              <dd class="inline-block p-break-words">
                                {%- if property.last contains '/uploads/' -%}
                                  <a
                                    href="{{ property.last }}"
                                    class="hover-text-link inline"
                                  >
                                    {{ 'products.product.file' | t }}
                                  </a>
                                {%- else -%}
                                  {% if property.first == name_edt and is_update_date %}
                                    {{ message_update }}
                                  {% else %}
                                    {{ property.last }}
                                  {% endif %}
                                {%- endif -%}
                              </dd>
                            {% endif %}  
                            </div>
                          {%- endif -%}
                        {%- endfor -%}
                      </dl>
                      {% if item.selling_plan_allocation.selling_plan.name %}
                      <p class="text-normal mt-1">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                      {% endif %}
                    {%- endif -%}
                    {%- if item.discounts.size > 0 -%}
                      <ul class="pl-4 pr-4 pt-3 pb-3 bg-[rgba(var(--colors-text),0.1)] mt-4 lg:mb-0{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}">
                        {%- for discount in item.discounts -%}
                          <li class="flex relative">
                            <span class="w-4 absolute top-1/2 -translate-y-1/2 left-0">{%- render 'icon-alls', icon: 'icon-discount' -%}</span>
                            <span class="text-normal pl-6 discount-title">{{ discount.title }}</span>
                          </li>
                        {%- endfor -%}
                      </ul>
                    {%- endif -%}
                    <div
                      id="LineItemError-{{ item.key }}"
                      class="hidden bg-[rgba(var(--color-error),0.2)] cart-item__error mt-2 pt-3 pb-3 pr-3.5 pl-3.5{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
                      role="alert">
                      <p class="flex relative w-full">
                        <span class="absolute left-0 rtl:left-auto rtl:right-0 top-1/2 -translate-y-1/2 w-3">{% render 'icon-alls', icon: 'icon-error' %}</span>
                        <span class="cart-item__error-text text-normal pl-6 rtl:pl-0 rtl:pr-6"></span>
                      </p>
                    </div>
                  </td>
                  <td class="pt-7 pb-0 md:pt-5 md:pb-5 hidden md:table-cell md:align-top md:w-2/12{% if is_rtl %} pl-5{% else %} pr-5{% endif %}">
                    <div class="price">
                      <span>
                        {%- assign item_original_price = compareat | default: originalprice -%}
                        {%- if item_original_price > finallineprice -%}
                          <span class="selection:bg-text-[rgb(var(--colors-price-sale),0.2)] price-sale mr-1">
                            {% if settings.currency_code_enable %}
                              {{- finallineprice | money_with_currency -}}
                            {% else %}
                              {{ finallineprice | money }}
                            {% endif %}
                          </span>
                          <s class="cap rtl:ml-1 rtl:mr-0 inline-block opacity-50">{%- if settings.currency_code_enable -%}{{- item_original_price | money_with_currency -}}{%- else -%}{{ item_original_price | money }}{%- endif -%}</s>                           
                        {%- else -%}
                          <span class="price">
                            {% if settings.currency_code_enable %}
                              {{- finallineprice | money_with_currency -}}
                            {% else %}
                              {{ finallineprice | money }}
                            {% endif %}
                          </span>
                        {%- endif -%}
                      </span>
                      {%- if item.variant.available and item.unit_price_measurement -%}
                        <br />
                        <small>
                          {% if settings.currency_code_enable %}
                            {{ unitprice | money_with_currency }}
                          {% else %}
                            {{ unitprice | money }}
                          {% endif %}
                          <span aria-hidden="true">/</span>
                          {%- if item.variant.unit_price_measurement.reference_value != 1 -%}
                            {{- item.variant.unit_price_measurement.reference_value -}}
                          {%- endif -%}
                          {{ item.variant.unit_price_measurement.reference_unit }}
                        </small>
                      {%- endif -%}
                    </div>
                  </td>
                  <td class="lg:pl-2 pt-7 pb-0 md:pt-5 md:pb-5 md:hidden text-right md:text-left">
                    <div class="price">
                      <span class="flex flex-wrap justify-end gap-1">
                        {%- if subitem_data != blank -%}
                          {% assign final_line_price = item.final_line_price | plus: subitem_data.final_line_price %}                          
                        {%- else -%}
                          {% assign final_line_price = item.final_line_price %}                          
                        {%- endif -%}
                        
                        {%- assign item_original_price = compareat | default: originalprice -%}
                        {% assign compare_at_price = item.quantity | times: item_original_price %}
                        {%- if compare_at_price > final_line_price -%}
                          <span class="selection:bg-text-[rgb(var(--colors-price-sale),0.2)] price-sale">
                            {% if settings.currency_code_enable %}
                              {{ final_line_price | money_with_currency }}
                            {% else %}
                              {{ final_line_price | money }}
                            {% endif %}
                          </span>
                          
                          <s class="cap opacity-50">
                            {% if settings.currency_code_enable %}
                              {{- compare_at_price | money_with_currency -}}
                            {% else %}
                              {{- compare_at_price | money -}}
                            {% endif %}
                          </s>                           
                        {%- else -%}
                          <span>
                            {% if settings.currency_code_enable %}
                              {{ final_line_price | money_with_currency }}
                            {% else %}
                              {{ final_line_price | money }}
                            {% endif %}
                          </span>
                        {%- endif -%}
                      </span>
                      {%- if item.variant.available and item.unit_price_measurement -%}
                        <small>
                          {% if settings.currency_code_enable %}
                            {{ unitprice | money_with_currency }}
                          {% else %}
                            {{ unitprice | money }}
                          {% endif %}
                          <span aria-hidden="true">/</span>
                          {%- if item.variant.unit_price_measurement.reference_value != 1 -%}
                            {{- item.variant.unit_price_measurement.reference_value -}}
                          {%- endif -%}
                          {{ item.variant.unit_price_measurement.reference_unit }}
                        </small>
                      {%- endif -%}
                    </div>
                  </td>
                  {% assign atbundleid = item.properties['_autobundleid'] %}  
                  {% assign subitemindex = 0 %}
                  {% for atnewitem in cart.items %}
                    {% if atnewitem.properties['_autoaddon_item'] == 'sub' and atnewitem.properties['_autobundleid'] == atbundleid %}
                      {% assign atsubitem_data = atnewitem %}
                      {% assign subitemindex = atnewitem.key %}
                    {% endif %}
                  {% endfor %}
                  <td class="lg:pl-2 pt-0 pb-5 pl-4 mt-2 md:pr-5 lg:pr-0 md:mt-3.5 md:pl-0 md:pt-5 rtl:pr-5 rtl:md:pr-0 rtl:md:pl-5 rtl:lg:pl-0 col-start-2 col-end-4 flex items-center md:table-cell md:align-top">
                    
                    <div class="flex" {% if hideatc %}style="display: none;"{% endif %}>
                      <div class="relative flex w-28 h-10 border border-solid justify-between{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}">
                        <button class="items-center w-1/3 justify-center flex opacity-70 cursor-pointer" 
                          @click.prevent="minusItemQty('{{ item.key }}', {{ item.index | plus: 1 }}, '{{ item.title }}', {{ item.product_id }}, '{{ subitemindex }}')" aria-label="button-minus">
                          {% render 'icon-alls', icon: 'icon-minus', class: "w-3" %}
                        </button>
                        <input
                          id="cart-qty-{{ item.key }}"
                          class="cart-item-qty-{{ item.index | plus: 1 }} outer-spin-button bg-transparent w-1/3 text-center pt-2 pb-2 placeholder:opacity-60 focus-within:outline-none"
                          aria-label="{{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}"
                          type="number"
                          value="{{ item.quantity }}"
                          min="0"
                          x-on:change="updateItemQty('{{ item.key }}', {{ item.index | plus: 1 }}, '{{ item.title }}', {{ item.product_id }}, '{{ subitemindex }}')"
                          @keydown="handleKeydown($event, $el)"
                        >
                        <button class="items-center w-1/3 justify-center flex opacity-70 cursor-pointer" 
                          @click.prevent="plusItemQty('{{ item.key }}', {{ item.index | plus: 1 }}, '{{ item.title }}', {{ item.product_id }}, '{{ subitemindex }}')" aria-label="button-plus">
                          {% render 'icon-alls', icon: 'icon-plus', class: "w-3" %}
                        </button>
                      </div>
                    </div>
                  </td>
                  <td class="pb-5 md:pt-5 md:table-cell md:align-top lg:w-2/12 lg:pl-2">
                    <div class="flex justify-end md:justify-between">
                      <div class="price cart-item-price-{{ item.index | plus: 1 }} hidden md:flex md:flex-wrap">
                        {%- assign item_original_price = compareat | default: originalprice -%}
                        {% assign compare_at_price = item.quantity | times: item_original_price %}
                        {%- if compare_at_price > final_line_price -%}
                          <span class="selection:bg-text-[rgb(var(--colors-price-sale),0.2)] price-sale mr-1">
                            {%- if settings.currency_code_enable -%}
                              {{ final_line_price | money_with_currency }}
                            {%- else -%}
                              {{ final_line_price | money }}
                            {% endif %}
                          </span>
                          <s class="cap rtl:ml-1 rtl:mr-0 inline-block opacity-50">{%- if settings.currency_code_enable -%}{{- compare_at_price | money_with_currency -}}{%- else -%}{{- compare_at_price | money -}}{%- endif -%}</s>                           
                        {%- else -%}
                          <span>
                            {% if settings.currency_code_enable %}
                              {{ final_line_price | money_with_currency }}
                            {% else %}
                              {{ final_line_price | money }}
                            {% endif %}
                          </span>
                        {%- endif -%}
                      </div>
                      <button
                        id="remove-{{ item.key }}"
                        class="opacity-50 md:-mt-3.5 w-12 pt-3 pb-3 pl-3.5 pr-3.5 flex justify-center items-center cursor-pointer min-w-[3rem]"
                        @click.prevent="removeItem('{{ item.key }}', {{ forloop.index }}, '{{ item.title }}', {{ item.product_id }}, '{{ subitemindex }}')"
                        aria-label="button-remove">
                        <span class="inline-block w-[18px] h-[18px]">{%- render 'icon-alls', icon: 'icon-remove' -%}</span>
                      </button>
                      <div id="loading-{{ item.key }}" class="md:-mt-3.5 w-12 hidden pt-3 pb-3 pl-3.5 pr-3.5 flex justify-center items-center cursor-pointer z-20">
                        <div class="animate-spin w-[18px] h-[18px] inline-block">
                          {% render 'icon-alls', icon: 'icon-loading' %}
                        </div>
                      </div>
                    </div>
                  </td> 
                </tr>
                {% endunless %}
              {%- endfor -%}
            </tbody>
          </table>
          <div class="absolute top-0 bottom-0 left-0 h-full w-full z-20" x-cloak x-show="loading">
          </div>
        </form>
        {%- if settings.cart_page_layout == 'side' -%}
          <div>
            {% if settings.enable_estimate_shipping %}
              {% if settings.enable_estimate_shipping %}
                <div class="hidden md:block mt-4 md:mt-7">
                  {% render 'estimate-shipping-rate', cartPage: true %}
                </div>
                <div class="md:hidden border-y border-solid">
                  <div class="pt-3 pb-3 relative" @click="$store.xPopupShipping.open = !$store.xPopupShipping.open" class="h4 text-medium">
                    <p class="h4 text-medium">{{ 'shipping.estimate' | t }}</p>
                    <span class="w-3 duration-200 block absolute rtl:left-1 rtl:right-auto right-1 opacity-70 top-1/2 -translate-y-1/2"
                      :class="$store.xPopupShipping.open && 'rotate-180'"
                    > 
                    {% render 'icon-alls', icon: 'icon-caret' %}
                    </span>
                  </div>
                  <div x-show="$store.xPopupShipping.open" x-cloak x-collapse>
                    {% render 'estimate-shipping-rate', main_cart_mobile: true %}
                  </div>
                </div>
              {%- endif -%}
            {% endif %}
          </div>
        {%- endif -%}
      </div>

      {%- if showSideBar -%}
        <div class="form-checkout bg-theme-secondary mt-10 md:mt-7 lg:mt-0 w-full lg:w-1/3 pt-5 pb-5 pl-5 pr-5 lg:pl-7 lg:pr-7 lg:pt-7 lg:pb-7">
          {%- if settings.show_cart_note -%}
            <div class="mb-5">
              <textarea x-ref="cart_field_note_data" hidden>{{- cart.note -}}</textarea>
              <p for="x-cart-note" class="block h4 text-medium md:mb-1">{{ 'sections.cart.note' | t }}</p>
              <textarea
                id="x-cart-note"
                class="w-full bg-transparent border pl-4 pr-4 pt-4 pb-4 mt-2 outline-none focus:outline-none focus:border-current{% if settings.edges_type == 'rounded_corners' %} !rounded-md{% endif %}"
                name="note"
                form="cart"
                rows="2"
                cols="60"
                aria-label="{{ 'sections.cart.note' | t }}"
                @change="$store.xCartHelper.updateCart({ note: $el.value})"
              >{{ cart.note }}</textarea>
            </div>
          {%- endif -%}
          {%- if settings.show_cart_custom_field and settings.cart_custom_field_label != blank -%}
            {%- capture cartFieldsData -%}
              {
                "custom_field_label": "{{ settings.cart_custom_field_label | escape }}",
                "custom_field_required": {{ settings.cart_custom_field_required | default: false }},
                "custom_field_pattern": "{{ settings.cart_custom_field_pattern | escape }}"
              }
            {%- endcapture %}
            <div
              class="mb-5 lg:mb-6"
              x-data="xCartFields"
              x-intersect="loadData"
              x-cart-fields-data='{{ cartFieldsData | escape }}'
            >
              <p for="cart-custom-field" class="block h4 text-medium mb-2 md:mb-3{% if settings.show_cart_note %} mt-4 md:mt-5{% endif %}">{{ settings.cart_custom_field_label }}{% if settings.cart_custom_field_required %}<span class="pl-1" aria-hidden="true">*</span>{% endif %}</p>
              <input
                id="x-cart-custom-field"
                type="text"
                {% if settings.cart_custom_field_required %}
                  :class="custom_field_error && 'border-[rgba(var(--color-error))] shadow-[0_0_0_1px_rgba(var(--color-error))]'"
                {% endif %}
                class="w-full pr-4 pl-4 pt-3.5 pb-3.5 border border-solid bg-transparent focus-within:outline-none placeholder:text-current placeholder:opacity-60{% if settings.edges_type == 'rounded_corners' %} !rounded-md{% endif %}"
                placeholder="{{ settings.cart_custom_field_label }}"
                value=""
                x-model="custom_field"
              />
              {% if settings.cart_custom_field_required %}
                <p x-cloak x-show="custom_field_error" class="text-[rgba(var(--color-error))] mt-2">{{ 'sections.cart.required_cart_note' | t }} {{ settings.cart_custom_field_label }}</p>
              {% endif %}
            </div>
          {%- endif -%}
          {% for block in section.blocks %}
            {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'subtotal' -%}
                <div class="{% if forloop.last %} mt-3{% endif %}" {{ block.shopify_attributes }}>
                  {%- if settings.enable_featured_discount -%}
                    <div class="flex justify-end w-full">
                      <div
                        x-data="xCounponCode"
                        x-init="$store.xCounponCodeDetail.getDiscountCode();"
                        class="pb-5 lg:pb-8 w-full z-20 pl-[1px] pr-[1px]{% unless forloop.first %} mt-5{% endunless %}"
                        @keydown.escape.stop="$store.xCartHelper.openField = false"
                      >
                        <label class="block h4 text-medium mb-2 md:mb-3" for="x-cart-discount-field">{{ 'general.cart.discount_code' | t }}</label>
                        <div class="flex pt-1 pb-1 pl-1 pr-1 border border-solid rounded-[var(--border-radius)]">
                          <div class="grow">
                            <input
                              id="x-cart-discount-field"
                              type="text"
                              class="w-full pl-3.5 pr-3.5 pt-2.5 pb-2.5 focus:outline-none focus-within:outline-none focus:border-0 bg-transparent placeholder:text-current placeholder:opacity-60"
                              placeholder="{{ 'general.cart.placeholder_discount' | t }}"
                              x-on:change="onChange()"
                              @keyup.enter="applyDiscountToCart()"
                            />
                          </div>
                          <button @click="applyDiscountToCart()"
                            class="button button-solid whitespace-nowrap p-break-words border inline-block empty:hidden pl-4 pr-4 lg:pl-6 lg:pr-6 pt-2 pb-2 leading-normal cursor-pointer pointer-events-auto"
                          >
                            <span :class="{ 'lg:block opacity-0 is-focus-button' : loading }">
                              <span class="flex items-center justify-center">
                                {% assign button_label = 'general.cart.apply' | t %}
                                {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
                              </span>
                            </span>
          
                            <div class="lg:inline-block animate-spin w-4 h-4 md:w-5 md:h-5 absolute top-[calc(50%-8px)] left-[calc(50%-8px)] md:top-[calc(50%-10px)] md:left-[calc(50%-10px)]" x-show="loading" x-cloak>
                              {% render 'icon-alls', icon: 'icon-loading' %}
                            </div>
                          </button>
                        </div>
                        <p x-show="$store.xCounponCodeDetail.discountFaild" x-cloak class="text-[rgba(var(--color-error))] mt-2">{{ 'general.cart.discount_wrong' | t }}</p>
                        <p x-show="$store.xCounponCodeDetail.discountApplied" x-cloak class="text-[rgba(var(--color-success))] mt-2">{{ 'general.cart.discount_applied' | t }}</p>
                        <p x-show="$store.xCounponCodeDetail.discountCorrect" x-cloak class="text-[rgba(var(--color-success))] mt-2">{{ 'general.cart.discount_correct' | t }}</p>
                      </div>
                    </div>
                    <script src="{{ 'coupon-code.js' | asset_url }}" defer></script>
                  {%- endif -%}
                  <div id="js-contents" class="{% if settings.enable_featured_discount %}lg:mt-0{% endif %}{% if is_rtl %} md:text-left{% else %} md:text-right{% endif %}" {{ block.shopify_attributes }}>
                    <div>
                      <p class="h4 text-medium md:mb-5">{{ 'sections.cart.subtotal' | t }}</p>
                      <p class="h3 mt-3 lg:mt-4 mb-2 lg:mb-1.5">{{ cart.total_price | money_with_currency }}</p>
                    </div>
                    {%- if cart.cart_level_discount_applications.size > 0 -%}
                      <div class="mt-2">
                        <ul>
                          {%- for discount in cart.cart_level_discount_applications -%}
                            <li class="inline-flex relative md:justify-end items-center text-small">
                              <span class="w-4 top-1/2">{%- render 'icon-alls', icon: 'icon-discount' -%}</span>
                              <span class="pl-1 pr-1 p-break-words discount-title">{{ discount.title }}</span>
                              (-{% if settings.currency_code_enable %}
                                  {{ discount.total_allocated_amount | money_with_currency }}
                                {% else %}
                                  {{ discount.total_allocated_amount | money }}
                                {% endif %})
                            </li>
                          {%- endfor -%}
                        </ul>
                      </div>
                    {%- endif -%}
                    <small>
                      {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                        {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                      {%- elsif cart.taxes_included -%}
                        {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
                      {%- elsif shop.shipping_policy.body != blank -%}
                        {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                      {%- else -%}
                        {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
                      {%- endif -%}
                    </small>
                  </div>
                {% comment %} {%- else -%} {% endcomment %}
                  {%- if settings.cart_enable_terms_and_conditions -%}
                    <div x-data="xCartTerm" class="flex flex-col md:items-end mb-1 mt-4 eurus{% if is_rtl %} md:text-left{% else %} md:text-right{% endif %}">
                      <div class="flex items-center">
                        <input
                          id="x-cart-agree" 
                          class="checkbox checkbox-checked mr-2 rtl:mr-0 rtl:ml-2 h-4 w-4 min-w-[1rem] border checked:border-[rgba(var(--colors-text-link))] checked:bg-[rgba(var(--colors-text-link))] relative cursor-pointer{% if settings.edges_type == 'rounded_corners' %} rounded{% else %} rounded-none{% endif %}" 
                          type="checkbox"
                          x-model="checked"
                        />
                        <label for="x-cart-agree" class="cursor-pointer">
                          {% if settings.cart_terms_and_conditions_page != blank %}
                            {{ 'sections.cart.cart_enable_terms_and_conditions_html' | t: url: settings.cart_terms_and_conditions_page.url }}
                          {% else %}
                            {{ 'sections.cart.cart_enable_terms_and_conditions' | t }}
                          {% endif %}
                        </label>
                      </div>
                      <p class="clear-left text-[rgba(var(--color-error))] mt-2 text-normal" x-show="!checked" x-cloak>{{ 'general.cart.terms_confirm' | t }}</p>
                    </div>
                  {%- else -%}
                    <input id="x-cart-agree" class="hidden" type="checkbox" checked="checked" />
                  {%- endif -%}
                </div>
              {%- when 'buttons' -%}
                <div {{ block.shopify_attributes }}>
                  <button
                    id="checkout-submit" 
                    class="button button-solid w-full justify-center pl-6 pr-6 pt-3.5 pb-3.5{% if forloop.last %} mt-4{% endif %} md:mb-1.5 cursor-pointer leading-normal" 
                    type="submit" 
                    name="checkout"
                    form="cart"
                    @click="$store.xCartHelper.goToCheckout($event)"
                    {% if cart == empty %}disabled{% endif %}
                  >
                    {% assign button_label = 'sections.cart.checkout' | t %}
                    <span class="flex items-center justify-center">
                      {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
                    </span>
                  </button>
                  {%- if additional_checkout_buttons -%}
                    <div class="left{% if settings.enable_estimate_shipping %} button-full{% endif %}">
                      {{ content_for_additional_checkout_buttons }}
                    </div>
                  {%- endif -%}
                </div>
            {%- endcase -%}
          {% endfor %}
          <div id="cart-errors"></div>
        </div>
        
      {%- endif -%}
    </div>
  {%- else -%}
    <div class="block items-center justify-center text-center pb-9">
      <{{ section.settings.heading_tag }} class="h2 block mt-6 mb-6">{{ 'sections.cart.empty' | t }}</{{ section.settings.heading_tag }}>
      <a class="disable-effect button button-solid inline-block leading-normal py-2.5 lg:py-3 px-6" href="{{ settings.continue_shopping }}">
        {%- assign button_label = 'general.continue_shopping' | t -%}
        {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
      </a>
      {%- if shop.customer_accounts_enabled and customer == nil -%}
        <div class="mt-10">
          <p class="block mb-4 text-medium">{{ 'sections.cart.login.title' | t }}</p>
          {% # Kwikpass changes - [Starts] %}
          {% comment %}
          <p class="my-2 leading-tight">
            {{ 'sections.cart.login.paragraph_html' | t: link: routes.account_login_url }}
          </p>
          {% endcomment %}
           <p class="my-2 leading-tight">
            {{ 'sections.cart.login.paragraph_html' | t: link: '/account' }}
          </p>
          {% # Kwikpass changes - [Ends] %}
        </div>
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- if showSideBar -%}
    {%- if settings.show_cart_custom_field and settings.cart_custom_field_label != blank -%}
      <script src="{{ 'cart-fields.js' | asset_url }}" defer></script>
    {%- endif -%}
    {%- if settings.cart_enable_terms_and_conditions -%}
      <script src="{{ 'cart-term.js' | asset_url }}" defer></script>
    {%- endif -%}
    {%- if settings.enable_estimate_shipping -%}
      <script src="{{ 'estimate-shipping-rate.js' | asset_url }}" defer></script>
    {%- endif -%}
  {%- endif -%}
</div>
{% schema %}
{
  "name": "t:sections.main-cart-items.name",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.main-cart-items.settings.info"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "default": "h1",
      "label": "Heading tag",
      "options": [
        {
          "value": "h1",
          "label": "H1"
        },
        {
          "value": "h2",
          "label": "H2"
        },
        {
          "value": "h3",
          "label": "H3"
        },
        {
          "value": "h4",
          "label": "H4"
        },
        {
          "value": "h5",
          "label": "H5"
        },
        {
          "value": "h6",
          "label": "H6"
        },
        {
          "value": "p",
          "label": "p"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "unit": "px",
      "step": 4,
      "default": 44,
      "label": "t:sections.all.padding.padding_top"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "unit": "px",
      "step": 4,
      "default": 0,
      "label": "t:sections.all.padding.padding_bottom"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_layout_mobile"
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 100,
      "unit": "px",
      "step": 4,
      "default": 36,
      "label": "t:sections.all.padding.padding_top"
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 100,
      "unit": "px",
      "step": 4,
      "default": 0,
      "label": "t:sections.all.padding.padding_bottom"
    }
  ],
  "blocks": [
    {
      "type": "subtotal",
      "name": "t:sections.main-cart-footer.blocks.subtotal.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-cart-footer.blocks.info_side"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "t:sections.main-cart-footer.blocks.buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-cart-footer.blocks.info_side"
        }
      ]
    },
    {
      "type": "@app"
    }
  ]
}
{% endschema %}