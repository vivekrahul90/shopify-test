{% comment %}
    Renders a product card

    Accepts:
    - card_product: {Object} Product Liquid object (optional)
    - media_aspect_ratio: {String} Size of the product image card. Values are "square" and "portrait". Default is "square" (optional)
    - show_vendor: {Boolean} Show the product vendor. Default: false
    - show_rating: {Boolean} Show the product rating. Default: false
    - loading: {Boolean} Image should be lazy loaded. Default: lazy (optional)
    - section_id: {String} The ID of the section that contains this card.
    - list_name: {String} The title of collection,
    - full_width: {Boolean} Show section full width. Default: false
    Usage:
    {% render 'card-product-shop-the-look', show_vendor: section.settings.show_vendor %}
{% endcomment %}
 
{%- liquid
  if media_aspect_ratio == blank
    assign media_aspect_ratio = settings.product_image_ratio
  endif 
  assign ratio = 1 
  case media_aspect_ratio
    when "portrait"
      assign ratio = 1.5
    when "landscape"
      assign ratio = 0.75
    when "wide"
      assign ratio = 0.5625
    when "3/4"
      assign ratio = 1.33
  endcase
  assign show_rounded_image = false
  if settings.edges_type == 'rounded_corners'
    assign show_rounded_image = true
  endif

  assign can_show_preorder = false
  if settings.preorder_show == 'yes' or settings.preorder_show == 'on_backordered' and card_product.selected_or_first_available_variant.inventory_policy == 'continue' and card_product.selected_or_first_available_variant.inventory_quantity < 1 and card_product.selected_or_first_available_variant.inventory_management != nil
    if settings.applied_products_preorder == blank and settings.applied_collections_preorder == blank
      assign can_show_preorder = true
    else 
      assign list_product = ''
      for prod in settings.applied_products_preorder
        assign list_product = list_product | append: ';' | append: prod.id
      endfor 
      for collec in settings.applied_collections_preorder
        for prod in collec.products 
          assign list_product = list_product | append: ';' | append: prod.id
        endfor
      endfor
      if list_product contains card_product.id 
        assign can_show_preorder = true
      endif
    endif
  endif 
-%}
{% if card_product != blank %}
  {%- capture dataForCustomerEvent -%}
    {
      "product": {
        "title": "{{ card_product.title | escape }}",
        "listName": "{{ collection.title | default: list_name | escape }}",
        "sku": "{{ card_product.id }}",
        "currencyCode": "{{ cart.currency.iso_code }}",
        "price": {{ card_product.price }},
        "vendor": "{{ card_product.vendor | escape }}"
      }
    }
  {%- endcapture %}
  {%- unless disable_badges -%}
    {%- capture dataForLabel -%}
      {
        "id": {{ card_product.id }},
        "available": {{ card_product.available | default: false }},
        "title": "{{ card_product.title | escape }}",
        "compare_at_price": {{ card_product.selected_or_first_available_variant.compare_at_price | default: 0 }},
        "price": {{ card_product.selected_or_first_available_variant.price | default: 0 }},
        "price_with_currency": "{% if settings.currency_code_enable %}{{ card_product.selected_or_first_available_variant.price | money_with_currency }}{% else %}{{ card_product.selected_or_first_available_variant.price | money }}{% endif %}",
        "sale_amount": "{{ card_product.selected_or_first_available_variant.compare_at_price | minus: card_product.selected_or_first_available_variant.price | money | strip_html }}",
        "collections": "||{{ card_product.collections | map: 'id' | join: '||' }}||",
        "inventory_management": "{{ card_product.selected_or_first_available_variant.inventory_management }}",
        "qty": {{ card_product.selected_or_first_available_variant.inventory_quantity | default: -1 }},
        "container": "card",
        "can_show_preorder": {{ can_show_preorder }}
      }
    {%- endcapture %}
  {%- endunless -%}  
  <div class="product-item x-product-bundle-data card-product flex flex-col relative z-10{% if show_rounded_image %} rounded-[10px]{% endif %}">
    <a href="{{ card_product.url }}" class="card block relative disable-effect">
      <div 
        {% unless disable_badges %} 
          x-data="{ lastWindowWidth: 0 }"
          x-intersect.once.margin.200px='$nextTick(() => {
            $store.xBadges.load($el);
          })'
          x-labels-data="{{ dataForLabel | escape }}"
        {% endunless %} 
        class="group relative w-full z-0 cursor-pointer overflow-hidden">
        <div
          class="block h-full"
          @click='$store.xCustomerEvent.fire("product_selected", $el)'
          x-customer-event-data="{{ dataForCustomerEvent | escape }}"
        >
          <div class="w-full relative overflow-hidden before:h-0 before:block z-0{% if show_rounded_image %} rounded-[10px]{% endif %}{% unless media_aspect_ratio == "natural" %} pb-[{{ ratio | times: 100.0 }}%]{% else %}{% if card_product.featured_media.media_type == "model" %} pb-[100%]{% endif %}{% endunless %}"{% if media_aspect_ratio == "natural" and card_product.featured_media and card_product.featured_media.media_type != "model" %} style="height:0; padding-bottom: {{ 1 | divided_by: card_product.featured_media.aspect_ratio | times: 100 }}%;"{% endif %}>
            {%- if card_product.featured_media -%}
              {%- if loading == 'eager' -%}
                <div class="hidden">
                  {{ card_product.featured_media | image_url: width: 1500 | image_tag: widths: '375, 450, 750, 900, 1100, 1500', preload: true, loading: 'lazy' }}
                </div>
              {%- endif -%}
              <div class="w-full h-full top-0 left-0 absolute duration-300 transition ease-out">
                {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
                <img
                  srcset="{{ card_product.featured_media | image_url: width: 225 }} 225w,
                    {{ card_product.featured_media | image_url: width: 375 }} 375w,
                    {{ card_product.featured_media | image_url: width: 450 }} 450w,
                    {{ card_product.featured_media | image_url: width: 750 }} 750w,
                    {{ card_product.featured_media | image_url: width: 900 }} 900w,
                    {{ card_product.featured_media | image_url: width: 1100 }} 1100w,
                    {{ card_product.featured_media | image_url: width: 1500 }} 1500w
                    {% if card_product.featured_media.width %},{{ card_product.featured_media | image_url }} {{ card_product.featured_media.width }}w{% endif %}" 
                  src="{{ card_product.featured_media | image_url: width: 1080 }}"
                  sizes="{% unless full_width %}(min-width: {{ settings.page_width }}px) {{ settings.page_width | times: 0.4 }}px, {% endunless %}(min-width: 767px) 40vw, calc(50vw - 50px))"
                  alt="{{ card_product.featured_media.alt | escape }}"
                  class="motion-reduce aspect-{{ media_aspect_ratio }} w-full h-full object-cover{% if card_product.media[1] != nil and settings.products_hover_to_reveal_second_image %} image-first-hover opacity-100 group-hover:opacity-0{% else %} image-hover{%- endif -%}"
                  loading="{{ loading | default: 'lazy' }}"
                  width="{{ card_product.featured_media.width }}"
                  height="{{ card_product.featured_media.height }}"
                >
                {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}
              </div>
              {%- if card_product.media[1] != nil and settings.products_hover_to_reveal_second_image -%}
                <div class="w-full h-full top-0 left-0 absolute duration-300 transition ease-out">
                  <img
                    srcset="
                    {{ card_product.media[1] | image_url: width: 225 }} 225w,
                    {{ card_product.media[1] | image_url: width: 375 }} 375w,
                    {{ card_product.media[1] | image_url: width: 450 }} 450w,
                    {{ card_product.media[1] | image_url: width: 750 }} 750w,
                    {{ card_product.media[1] | image_url: width: 900 }} 900w,
                    {{ card_product.media[1] | image_url: width: 1100 }} 1100w,
                    {{ card_product.media[1] | image_url: width: 1500 }} 1500w
                    {% if card_product.media[1].width %},{{ card_product.media[1] | image_url }} {{ card_product.media[1].width }}w{% endif %}"
                    src="{{ card_product.media[1] | image_url: width: 1080 }}"
                    sizes="{% unless full_width %}(min-width: {{ settings.page_width }}px) {{ settings.page_width | times: 0.4 }}px, {% endunless %}(min-width: 767px) 40vw, calc(50vw - 50px))"
                    alt="{{ card_product.media[1].alt | escape }}"
                    class="motion-reduce{% if media_aspect_ratio == "natural" %} aspect-auto{% endif %} w-full h-full object-cover group-hover:cursor-pointer image-second-hover opacity-0 group-hover:opacity-100"
                    loading="lazy"
                    width="{{ card_product.media[1].width }}"
                    height="{{ card_product.media[1].height }}"
                  >
                </div>
              {%- endif -%}
            {%- else -%} 
              <div class='bg-[#c9c9c9] flex justify-center{% if show_rounded_image %} rounded-[10px] overflow-hidden{% endif %}{% unless media_aspect_ratio == "natural" %} absolute{% endunless %} top-0 left-0 w-full h-full items-center'>
                {%- render 'icon-placeholder', icon: 'icon-product', class: 'w-full h-full' %}
              </div>
            {%- endif -%}
          </div>
        </div>
      </div>
    </a>

    {% comment %} handle select product variant {% endcomment %}
    {%- liquid
      assign product_form_id = 'product-form-' | append: section_id
      if section.settings.button_atb_label != blank
        assign button_atb_label = section.settings.button_atb_label
      else
        assign button_atb_label = 'sections.product-bundle.add_to_bundle' | t
      endif 
      
      assign is_cbl = false
      if settings.enable_combined
        assign is_cbl = true
      endif
    -%}
    <div id="bundle-product-{{ card_product.id }}" 
      class="bundle-product grow"
      x-data="xProductItemBundle('{{ section_id }}', '{{ button_atb_label }}', '{{ section.id }}', '{{ card_product.url }}', '{{ card_product.id }}',{% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}, {{ each_product_can_added_to_bundle_once }})"
      {% unless is_cbl %}x-init="initVariant()"{% endunless %}
    >
      <div 
        id="x-product-template-{{ card_product.id }}-{{ section_id }}"
        class="flex flex-col h-full justify-between"
      >
        <div class="card-info pt-4 lg:pt-6 w-full block text-{{ settings.info_alignment_card_product }}{% if settings.hide_cart %} mb-3 md:mb-5{% endif %}">
          <div id="featured-image-{{ section_id }}" class="featured-image hidden">
            {%- if card_product.featured_media -%}{{ card_product.featured_media | image_url: width: 375 }}{%- endif -%}
          </div>
          <div class="w-full">
            <h3 class="card__heading h5 collection-title mb-3 leading-tight text-[{{ settings.text_base_size | times: 0.007875 }}rem] md:text-[{{ settings.text_base_size | times: 0.00875 }}rem]">
              <a
                {% if card_product.has_only_default_variant %}
                  href="{{ card_product.url }}"
                {% else %}
                  :href="`${productUrl}`"
                {% endif %}
                id="product-name-{{ section_id }}"
                class="full-unstyled-link product-name text-[rgba(var(--colors-heading))] hover:text-[rgba(var(--colors-text-link))] cursor-pointer duration-200 p-break-words"
                @click='$store.xCustomerEvent.fire("product_selected", $el)'
                x-customer-event-data="{{ dataForCustomerEvent | escape }}"
              >
                {{ card_product.title | escape }}
              </a>
            </h3>
          </div>
          
            {%- unless card_product.has_only_default_variant -%}
              <div class="text-{{ settings.info_alignment_card_product }} ltr">
                <div class="price" role="status" :class="isSelect && 'hidden'">
                  {% render 'price', product: card_product %}
                </div>
                <div id="price-{{ section.id }}-{{ block_id }}" x-cloak class="price" role="status" x-show="isSelect">
                  {% render 'price', product: card_product, use_variant: true %}
                </div>
                <div
                  class="x-variants-data variant-selects"
                  x-data="xVariantSelect($el,'{{ section_id }}', false, '{{ 'products.product.unavailable' | t }}', '{{ card_product.url }}', '{{ card_product.id }}', false, false, true, '{{ section.id }}')"
                  {% if each_product_can_added_to_bundle_once %}x-effect="setVariantSelected($el, currentVariant)"{% endif %}
                  {% unless is_cbl %}x-init="initVariant()"{% endunless %}
                  data-url="{{ card_product.url }}"
                >
                  {% if is_cbl %}
                    <div
                      id="current-variant-{{ section_id }}" 
                      class="current-variant hidden" 
                    >
                      {{ card_product.selected_or_first_available_variant | json }}
                    </div>
                    <div
                      id="variant-update-{{ section_id }}"
                      class="variant-update-{{ section_id }} mt-3"
                    >
                      {%- for option in card_product.options_with_values -%}
                        {%- assign option_index = forloop.index | minus: 1 -%}
                        {%- assign variant_key = 'option' | append: option.position -%}
                          <fieldset
                            id="Option-{{ section_id }}-{{ forloop.index0 }}"
                            class="product-form__input pl-0{% unless forloop.last %} pb-2{% endunless %} quick-view:pb-2 eurus gap-x-2"
                          >
                            <div class="mb-2">{{ option.name }}</div>
                            <div class="inline-flex gap-x-1 flex-wrap items-center justify-{{ settings.info_alignment_card_product }}">
                              {%- liquid
                              
                                assign color_option_values = settings.color_option_values | newline_to_br | strip_newlines | split: '<br />'

                                if settings.products_color_swatches_style == 'round' 
                                  assign classSwatch = ' rounded-full before:rounded-full'
                                endif
                                assign swatch_natural = false     
                                if settings.products_color_swatches_style == 'natural'
                                  assign swatch_natural = true
                                endif
                                assign ratio_image = false
                              -%}
                              {%- for value in option.values -%}
                                {%- liquid
                                  assign preview_image = blank
                                  assign variant_value = card_product.variants | where: variant_key, value | first
                                  if variant_value.featured_media.preview_image
                                    assign preview_image = variant_value.featured_media.preview_image
                                    unless ratio_image
                                      assign ratio_image = 1 | divided_by: variant_value.featured_media.preview_image.aspect_ratio | times: 100
                                    endunless
                                  elsif card_product.featured_media
                                    assign preview_image = card_product.featured_media
                                    unless ratio_image
                                      assign ratio_image = 1 | divided_by: card_product.featured_media.aspect_ratio | times: 100
                                    endunless
                                  endif

                                  assign option_disabled = true
                                  if value.variant.available
                                    assign option_disabled = false
                                  endif
                                -%}
                                {%- capture input_id -%}{{ section_id }}-{{ option.position }}-{{ forloop.index0 -}}-{{ card_product.id }}{%- endcapture -%}
                              
                                {%- capture input_name -%}{{ option.name }}-{{ option.position }}{%- endcapture -%}
                              
                                {%- capture input_dataset -%}
                                  data-available="{{ value.variant.available }}"
                                  data-product-url="{{ value.product_url }}"
                                  data-option-value-id="{{ value.id }}"
                                {%- endcapture -%}
                                {%- liquid
                                  assign color_custom = ''
                                  assign swatch_image = false
                                  assign color_value = ''
                                  
                                  for color_option_value in color_option_values reversed
                                    assign option_key = color_option_value | split: ':' | first
                                    assign option_value = color_option_value | split: ':' | last | strip
                            
                                    if option_key == value and option_value contains '.'
                                      assign color_custom = option_key
                                      assign swatch_image = true
                                      assign color_value = option_value
                                      break
                                    endif
                                    assign multiColors = option_value | remove_first: '#' | split: '#'
                                    if option_key == value
                                      assign color_custom = option_key
                                      assign color_value = option_value
                                      break
                                    endif
                                  endfor  
                                -%}
                                {% if preview_image and settings.replace_color_with_variant_images %}
                                  {%- style %}
                                  .color-watches.variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}:before {
                                      background-image: url({{ preview_image | image_url: width: 100, height: 100 }});
                                    }
                                  {%- endstyle %}  
                                {% elsif color_custom != '' %}
                                  {%- style %}
                                    {% if swatch_image %}
                                      [data-swatch="{{ color_custom }}"]:before {
                                        background-image: url({{ color_value | file_img_url: "100x100" }});
                                      }
                                    {% elsif multiColors.size == 3 %}
                                      [data-swatch="{{ color_custom }}"]:before {
                                        background: linear-gradient(45deg, {{ '#' | append: multiColors[0] }}, {{ '#' | append: multiColors[0] }} 33.3%, {{ '#' | append: multiColors[1] }} 33.3%, {{ '#' | append: multiColors[1] }} 66.6%, {{ '#' | append: multiColors[2] }} 66.6%, {{ '#' | append: multiColors[2] }});
                                      }
                                    {% elsif multiColors.size == 2 %}
                                      [data-swatch="{{ color_custom }}"]:before {
                                        background: linear-gradient(45deg, {{ '#' | append: multiColors[0] }}, {{ '#' | append: multiColors[0] }} 50%, {{ '#' | append: multiColors[1] }} 50%, {{ '#' | append: multiColors[1] }});
                                      }
                                    {% else %}
                                      [data-swatch="{{ color_custom }}"]:before {
                                        background: {{ color_value }};
                                      }
                                    {% endif %}
                                  {%- endstyle %}
                                {% endif %}
                                <input 
                                  id="{{ input_id }}"
                                  {{ input_dataset }}
                                  type="radio"
                                  name="{{ input_name }}"
                                  setion-id="{{ section_id }}"
                                  option-pos="{{ option.position }}"
                                  forloop="{{ forloop.index0 }}"
                                  value="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"
                                  form="{{ product_form_id }}"
                                  class="absolute opacity-0 h-1 w-1 input-radio{% if option_disabled %} disabled{% endif %}"
                                  aria-label="{{ value | escape }}"
                                  @change="updateVariantSelector('{{ input_id }}', '{{ value.product_url }}')"
                                  {% if value.selected %}
                                    checked
                                  {% endif %}
                                >           
                                {% if settings.products_color_swatches_enable_on_collection_page and settings.color_option_name contains option.name and settings.swatches_type == 'color' or settings.swatches_type == 'both_text_and_color' %}
                                  <label 
                                    class="color-watches variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }} cursor-pointer mb-2 inline-flex ml-0.5 rtl:mr-0.5{% if swatch_natural and settings.replace_color_with_variant_images and ratio_image %} color-swatch-natural{% endif %} swatch-{{ settings.swatch_size }} border relative{{ classSwatch }}" 
                                    for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}" 
                                    data-swatch="{{ color_custom }}"
                                    {% if preview_image == blank or settings.replace_color_with_variant_images == false and color_custom == '' %}
                                      style="background: {{ value | split: ' ' | last | handle }};"
                                    {% elsif swatch_natural and ratio_image %}
                                      style="--ratio-image: {{ ratio_image }}%;"
                                    {% endif %}
                                    tabindex="0"
                                    aria-label="{{ value | escape }}"
                                  >
                                    <span class="h-full w-full color-watches-disable"></span>
                                  </label>
                                {% else %}
                                  <label class="flex items-center outline-none font-medium text-[13px] cursor-pointer mb-2 ml-0.5 rtl:mr-0.5 pl-3.5 pr-3.5 pt-1.5 pb-1.5 border bg-[rgba(var(--background-color),1)]
                                    {% if rounded_corner %} rounded-md{% endif %}" for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                  >
                                    <span class="p-break-words">{{ value | escape }}</span>
                                  </label>
                                {% endif %}
                                <script type="application/json" data-resource="{{ input_id }}">
                                  {{ value.variant | json }}
                                </script>
                              {%- endfor -%}
                            </div>
                          </fieldset>
                      {%- endfor -%}
                    </div>
                  {% else %}
                    <script type="application/json">
                      {{ card_product.variants | json }}
                    </script>
                    <div
                      id="current-variant-{{ section_id }}" 
                      class="current-variant hidden" 
                      x-text="currentVariant && JSON.stringify(currentVariant)"
                    >
                    </div>
                    <div
                      id="variant-update-{{ section_id }}"
                      class="variant-update-{{ section_id }} mt-3"
                    >
                      {%- for option in card_product.options_with_values -%}
                        {%- assign option_index = forloop.index | minus: 1 -%}
                        {%- assign variant_key = 'option' | append: option.position -%}
                          <fieldset
                            id="Option-{{ section_id }}-{{ forloop.index0 }}"
                            class="product-form__input pl-0{% unless forloop.last %} pb-2{% endunless %} quick-view:pb-2 eurus gap-x-2"
                          >
                            <div class="mb-2">{{ option.name }}</div>
                            <div class="inline-flex gap-x-1 flex-wrap justify-{{ settings.info_alignment_card_product }}">
                              {%- liquid
                                assign variants_available_arr = card_product.variants | map: 'available'
                                assign variants_option1_arr = card_product.variants | map: 'option1'
                                assign variants_option2_arr = card_product.variants | map: 'option2'
                                assign variants_option3_arr = card_product.variants | map: 'option3'
                              
                                assign color_option_values = settings.color_option_values | newline_to_br | strip_newlines | split: '<br />'

                              if settings.products_color_swatches_style == 'round' 
                                assign classSwatch = ' rounded-full before:rounded-full'
                              elsif settings.edges_type == 'rounded_corners'
                                assign classSwatch = ' rounded-md overflow-hidden'
                              endif
                              assign swatch_natural = false     
                              if settings.products_color_swatches_style == 'natural'
                                assign swatch_natural = true
                              endif
                              assign ratio_image = false
                            -%}
                            {%- for value in option.values -%}
                              {%- liquid
                                assign preview_image = blank
                                assign variant_value = card_product.variants | where: variant_key, value | first
                                if variant_value.featured_media.preview_image
                                  assign preview_image = variant_value.featured_media.preview_image
                                  unless ratio_image
                                    assign ratio_image = 1 | divided_by: variant_value.featured_media.preview_image.aspect_ratio | times: 100
                                  endunless
                                elsif card_product.featured_media
                                  assign preview_image = card_product.featured_media
                                  unless ratio_image
                                    assign ratio_image = 1 | divided_by: card_product.featured_media.aspect_ratio | times: 100
                                  endunless
                                endif
                                assign option_disabled = true
                            
                                for option1_name in variants_option1_arr
                                  case option.position
                                    when 1
                                      if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                        assign option_disabled = false
                                      endif
                                    when 2
                                      if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                        assign option_disabled = false
                                      endif
                                    when 3
                                      if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == card_product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                        assign option_disabled = false
                                      endif
                                  endcase
                                endfor
                              -%}
                          
                              {%- liquid
                                assign color_custom = ''
                                assign swatch_image = false
                                assign color_value = ''
                                for color_option_value in color_option_values reversed
                                  assign option_key = color_option_value | split: ':' | first
                                  assign option_value = color_option_value | split: ':' | last | strip
                          
                                  if option_key == value and option_value contains '.'
                                    assign color_custom = option_key
                                    assign swatch_image = true
                                    assign color_value = option_value
                                    break
                                  endif
                                  assign multiColors = option_value | remove_first: '#' | split: '#'
                                  if option_key == value
                                    assign color_custom = option_key
                                    assign color_value = option_value
                                    break
                                  endif
                                endfor  
                              -%}
                              {% if preview_image and settings.replace_color_with_variant_images %}
                                {%- style %}
                                 .color-watches.variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}:before {
                                    background-image: url({{ preview_image | image_url: width: 100, height: 100 }});
                                  }
                                {%- endstyle %}  
                              {% elsif color_custom != '' %}
                                {%- style %}
                                  {% if swatch_image %}
                                    [data-swatch="{{ color_custom }}"]:before {
                                      background-image: url({{ color_value | file_img_url: "100x100" }});
                                    }
                                  {% elsif multiColors.size == 3 %}
                                    [data-swatch="{{ color_custom }}"]:before {
                                      background: linear-gradient(45deg, {{ '#' | append: multiColors[0] }}, {{ '#' | append: multiColors[0] }} 33.3%, {{ '#' | append: multiColors[1] }} 33.3%, {{ '#' | append: multiColors[1] }} 66.6%, {{ '#' | append: multiColors[2] }} 66.6%, {{ '#' | append: multiColors[2] }});
                                    }
                                  {% elsif multiColors.size == 2 %}
                                    [data-swatch="{{ color_custom }}"]:before {
                                      background: linear-gradient(45deg, {{ '#' | append: multiColors[0] }}, {{ '#' | append: multiColors[0] }} 50%, {{ '#' | append: multiColors[1] }} 50%, {{ '#' | append: multiColors[1] }});
                                    }
                                  {% else %}
                                    [data-swatch="{{ color_custom }}"]:before {
                                      background: {{ color_value }};
                                    }
                                  {% endif %}
                                {%- endstyle %}
                              {% endif %}
                              <input 
                                id="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                setion-id="{{ section_id }}"
                                option-pos="{{ option.position }}"
                                forloop="{{ forloop.index0 }}"
                                type="radio"
                                name="{{ option.name }}-{{ block_id }}"
                                value="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"
                                form="{{ product_form_id }}"
                                class="absolute opacity-0 h-1 w-1 input-radio"
                                {% if option_index > 0 %}
                                  :class="{'disabled': isSelect && (!currentAvailableOptions[{{ option_index }}] || !currentAvailableOptions[{{ option_index }}].includes(`{{ value }}`))}"
                                {% elsif option_disabled %}
                                  :class="{'disabled': isSelect }"
                                {% endif %}
                                x-model="options[{{ option_index }}]"
                                aria-label="{{ value | escape }}"
                              >               
                              {% if settings.color_option_name contains option.name %}
                                <label 
                                  class="color-watches variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }} cursor-pointer mb-2 block ml-0.5{% if settings.info_alignment_card_product == 'right' %} rtl:mr-0.5{% endif %}{% if swatch_natural and settings.replace_color_with_variant_images and ratio_image %} color-swatch-natural{% endif %} swatch-{{ settings.swatch_size }} border relative{{ classSwatch }}" 
                                  for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}" 
                                  data-swatch="{{ color_custom }}"
                                  {% if preview_image == blank or settings.replace_color_with_variant_images == false and color_custom == '' %}
                                    style="background: {{ value | split: ' ' | last | handle }};"
                                  {% elsif swatch_natural and ratio_image %}
                                    style="--ratio-image: {{ ratio_image }}%;"
                                  {% endif %}
                                  {% if settings.swatches_type == 'both_text_and_color' and card_product.options_with_values.size > 1 %}
                                    x-on:click="$store.xPreviewColorSwatch.onChangeVariant($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', '{{ variant_value.id | default: "" }}', '{{ section_id }}')"
                                  {% else %}
                                    x-on:click="$store.xPreviewColorSwatch.updateImage($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', {{ variant_value.id }})"
                                  {% endif %}
                                  tabindex="0"
                                  aria-label="{{ value | escape }}"
                                >
                                  <span class="h-full w-full color-watches-disable"></span>
                                </label>
                              {% else %}
                                {% liquid
                                  assign text_custom = blank
                                  assign text_value = ''
                                  for text_option_value in text_option_values
                                    assign option_key = text_option_value | split: ':' | first
                                    assign option_value = text_option_value | split: ':' | last
                                    
                                    if option_key == value
                                      assign text_custom = option_key
                                      assign text_value = option_value
                                      break
                                    endif
                                  endfor
                                %}
                                <label class="flex items-center outline-none font-medium text-[13px] cursor-pointer mb-2 pl-3.5 pr-3.5 pt-1.5 pb-1.5 border bg-[rgba(var(--background-color),1)]
                                  {% if rounded_corner %} rounded-md{% endif %}" for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                  {% if settings.swatches_type == 'both_text_and_color' and card_product.options_with_values.size > 1 %}
                                    x-on:click="$store.xPreviewColorSwatch.onChangeVariant($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', '{{ variant_value.id | default: "" }}', '{{ section_id }}')"
                                  {% else %}
                                    x-on:click="$store.xPreviewColorSwatch.updateImage($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', {{ variant_value.id }})"
                                  {% endif %}
                                >
                                  <span class="p-break-words">
                                    {% if text_custom != blank %}{{ text_value | escape }}{% else %}{{ value | escape }}{% endif %}
                                  </span>
                                </label>
                              {% endif %}
                            {%- endfor -%}
                          </div>
                        </fieldset>
                      {%- endfor -%}
                    </div>
                  {% endif %}
                </div>
              </div>
            {%- else -%}
              <div 
                x-init="document.addEventListener('eurus:cart:items-changed', () => {
                  Alpine.store('xUpdateVariantQuanity').updateQuantity('{{ section.id }}', '{{ card_product.url }}');
                });"
              >
              </div>
              <div id="current-variant-{{ section_id }}" class="current-variant hidden">{{ card_product.selected_or_first_available_variant.id }}</div>
              <div id="current-price-{{ section_id }}" class="current-price hidden">{{ card_product.price }}</div>
              <div class="price" role="status" :class="isSelect && 'hidden'">
                {% render 'price', product: card_product %}
              </div>
            {%- endunless -%}
          
        </div>
        {%- unless settings.hide_cart -%}
          {% if is_cbl %}
            <div class="card-info mb-6 md:mb-7">
              {%- form 'product', card_product, id: product_form_id, class: 'form h-full', novalidate: 'novalidate', data-type: 'add-to-cart-form', x-ref: 'product_form' -%}
                <input type="hidden" name="id" value="{{ card_product.selected_or_first_available_variant.id }}">
                <button 
                  type="submit"
                  name="add"
                  id="x-atc-button-{{ section_id }}"
                  @click.prevent="addToBundle($el, '{{ card_product.id }}', '{{ card_product.url }}', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}); setDisableSelectProduct($el);"
                  class="button button--{{ section.id }} add_to_cart_button x-atb-button w-full button-outline text-center inline-block border empty:hidden pl-6 pr-6 pt-2.5 pb-2.5 md:pt-3 md:pb-3 mt-3 md:mt-5 leading-normal disabled:cursor-not-allowed disabled:opacity-60"
                  {% if card_product.selected_or_first_available_variant.available == false %}
                    disabled
                  {% endif %}
                >
                  <span class="x-atc-text">
                    {%- if card_product.selected_or_first_available_variant.available -%}
                      {{ button_atb_label }}
                    {%- else -%}
                      {{ 'products.product.sold_out' | t }}
                    {%- endif -%}
                  </span>
                </button>
              {%- endform -%}
            </div>
          {% else %}
            <div class="card-info mb-6 md:mb-7 {% unless card_product.selected_or_first_available_variant.available %} hidden{% endunless %}">
              {%- form 'product', card_product, id: product_form_id, class: 'form h-full', novalidate: 'novalidate', data-type: 'add-to-cart-form', x-ref: 'product_form' -%}
                <input type="hidden" name="id" value="{{ card_product.selected_or_first_available_variant.id }}">
                <button 
                  type="submit"
                  name="add"
                  id="x-atc-button-{{ section_id }}"
                  @click.prevent="addToBundle($el, '{{ card_product.id }}', '{{ card_product.url }}', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}); setDisableSelectProduct($el);"
                  class="button button--{{ section.id }} add_to_cart_button x-atb-button w-full button-outline text-center inline-block border empty:hidden pl-6 pr-6 pt-2.5 pb-2.5 md:pt-3 md:pb-3 mt-3 md:mt-5 leading-normal disabled:cursor-not-allowed disabled:opacity-60"
                  {% if card_product.selected_or_first_available_variant.available == false %}
                    disabled
                  {% else %}
                    {%- unless card_product.has_only_default_variant -%}
                      disabled
                    {% endunless %}
                  {% endif %}
                >
                  <span class="x-atc-text"{% unless card_product.has_only_default_variant %} x-show="isSelect" x-cloak{% endunless %}>
                    {%- if card_product.selected_or_first_available_variant.available -%}
                      {%- unless card_product.has_only_default_variant -%}
                        {%- assign button_atb_label = 'sections.product-bundle.choose_option' | t -%}
                      {%- endunless -%}
                      <span class="flex items-center justify-center">
                        {{ button_atb_label }}
                      </span>
                    {%- else -%}
                      {{ 'products.product.sold_out' | t }}
                    {%- endif -%}
                  </span>
                  {% unless card_product.has_only_default_variant %}
                    <span :class="isSelect && 'hidden'">
                      {{ 'sections.product-bundle.choose_option' | t }}
                    </span>
                  {% endunless %}
                </button>
              {%- endform -%}
            </div>
          {% endif %}
        {%- endunless -%}
      </div>
    </div>
  </div>
{% else %}
  <div class="block">
    <div class="md:w-full">
      <div class="{% unless media_aspect_ratio == "natural" %} h-0 relative pb-[{{ ratio | times: 100.0 }}%]{% endunless %}{% if show_rounded_image %} rounded-[10px] overflow-hidden{% endif %}">
        <div class='bg-[#c9c9c9] flex justify-center{% unless media_aspect_ratio == "natural" %} absolute{% endunless %} top-0 left-0 w-full h-full items-center'>
          {%- render 'icon-placeholder', icon: 'icon-product', class: 'w-full h-full' %}
        </div>
      </div>
    </div>
    <div class="pt-4 lg:pt-6 pb-4 md:w-full text-{{ settings.info_alignment_card_product }} flex items-center md:block md:justify-{{ settings.info_alignment_card_product }}">
      <div>
        <p class="collection-title text-[rgba(var(--colors-heading))] mb-3 cursor-pointer duration-200 p-break-words leading-tight">
          <span class="h4">{{ 'onboarding.product_title' | t }}</span>
        </p>
        <div>{% render 'price' %}</div>
      </div>
    </div>
  </div>
{% endif %}
