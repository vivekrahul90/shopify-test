{%- style -%}
  {%- if show_background -%}
    {{ container_id }} .x-estimate-delivery {
      {% if background_color_light.alpha != 0.0 %}
        background: {{ background_color_light }};
        --background-color: {{ background_color_light.red }}, {{ background_color_light.green }}, {{ background_color_light.blue }};
      {% endif %}
    }
    .dark {{ container_id }} .x-estimate-delivery {
      background: {{ background_color_dark | default: 'transparent' }};
      --background-color: {{ background_color_dark.red }}, {{ background_color_dark.green }}, {{ background_color_dark.blue }};
    }
  {% endif %}

  {{ container_id }} {
    {%- if message_color_light != 'rgba(0,0,0,0)' -%}
      color: {{ message_color_light }};
      --colors-heading: {{ message_color_light.red }}, {{ message_color_light.green }}, {{ message_color_light.blue }};
    {%- endif -%}
  }

  .dark {{ container_id }} {
    {%- if message_color_dark != 'rgba(0,0,0,0)' -%}
      color: {{ message_color_dark }};
      --colors-text: {{ message_color_dark.red }}, {{ message_color_dark.green }}, {{ message_color_dark.blue }};
      --colors-heading: {{ message_color_dark.red }}, {{ message_color_dark.green }}, {{ message_color_dark.blue }};
    {%- else -%}
      color: rgba(var(--colors-text));
      --colors-heading: {{ settings.colors_dark_heading.red }}, {{ settings.colors_dark_heading.green }}, {{ settings.colors_dark_heading.blue }};
    {%- endif -%}
  }
{%- endstyle -%}
{%- liquid
  assign market = localization.country.iso_code
  assign data_min = settings.estimate_delivery_min
  if product.metafields.custom.delivery_date_min != blank
    assign data_min = product.metafields.custom.delivery_date_min
  endif 

  if data_min contains ';'
    assign estimate_mins = data_min | split: ";"
    for estimate_min in estimate_mins
      assign code_market_min = estimate_min | split: ":" | first | remove: " "
      assign min_value_market = estimate_min | split: ":" | last

      if code_market_min == market
        assign delivery_date_min = min_value_market | plus: 0
      endif 
    endfor
  else
    if data_min contains ':'
      assign code_market_min = data_min | split: ":" | first | remove: " "
      assign min_value_market = data_min | split: ":" | last

      if code_market_min == market
        assign delivery_date_min = min_value_market | plus: 0
      endif 
    else
      assign delivery_date_min = data_min | plus: 0
    endif 
  endif

  assign data_max = settings.estimate_delivery_max
  if product.metafields.custom.delivery_date_max != blank
    assign data_max = product.metafields.custom.delivery_date_max
  endif 

  if data_max contains ';'
    assign estimate_maxs = data_max | split: ";"
    for estimate_max in estimate_maxs
      assign code_market_max = estimate_max | split: ":" | first | remove: " "
      assign max_value_market = estimate_max | split: ":" | last

      if code_market_max == market
        assign delivery_date_max = max_value_market | plus: 0
      endif 
    endfor
  else
    if data_max contains ':'
      assign code_market_max = data_max | split: ":" | first | remove: " "
      assign max_value_market = data_max | split: ":" | last

      if code_market_max == market
        assign delivery_date_max = max_value_market | plus: 0
      endif 
    else
      assign delivery_date_max = data_max | plus: 0
    endif 
  endif

  assign mtf_message = product.metafields.custom.delivery_date_message | metafield_text | strip
  if mtf_message != ''
    assign message = product.metafields.custom.delivery_date_message | metafield_tag
  endif

  assign current_minute = "now" | date: "%M"
  assign current_time_of_day = "now" | date: "%H" | append: current_minute | plus: 0
  assign cutoff_time = settings.estimate_delivery_cutoff_hour | append: settings.estimate_delivery_cutoff_minute | plus: 0

  if current_time_of_day > cutoff_time
    assign delivery_date_min = delivery_date_min | plus: 1
    assign delivery_date_max = delivery_date_max | plus: 1
  endif

  assign to_min_date_seconds = delivery_date_min | times: 24 | times: 60 | times: 60
  assign to_max_date_seconds = delivery_date_max | times: 24 | times: 60 | times: 60

  assign min_date_month = 'now' | date: "%s" | plus: to_min_date_seconds | date: "%B"
  assign min_date_day = 'now' | date: "%s" | plus: to_min_date_seconds | date: "%d"
  assign max_date_month = 'now' | date: "%s" | plus: to_max_date_seconds | date: "%B"
  assign max_date_day = 'now' | date: "%s" | plus: to_max_date_seconds | date: "%d"

  assign min_date_month_format =  'date_time.month.' | append: min_date_month | t
  assign max_date_month_format =  'date_time.month.' | append: max_date_month | t

  assign min_date_string = min_date_month_format | append: ' ' | append: min_date_day
  assign max_date_string = max_date_month_format | append: ' ' | append: max_date_day
  if settings.date_format_estimate_cart == 'dd-mm'
     assign min_date_string = min_date_day | append: ' ' | append: min_date_month_format
     assign max_date_string = max_date_day | append: ' ' | append: max_date_month_format
  endif
-%}
{% if message contains 'delivery_tooltip' %}
  {% style %}
    {{ container_id }} .tooltip-popup {
      {% if bg_tooltip_color_light.alpha != 0.0 %}
        background: {{ bg_tooltip_color_light }};
      {% else %}
        background: {{ settings.colors_background }};
      {% endif %}
      {% if tooltip_color_light.alpha != 0.0 %}
        color: {{ tooltip_color_light }};
      {% endif %}
    }
    .dark {{ container_id }} .tooltip-popup {
      {% if bg_tooltip_color_dark.alpha != 0.0 %}
        background: {{ bg_tooltip_color_dark }};
      {% else %}
        background: {{ settings.colors_dark_background }};
      {% endif %}
      {% if tooltip_color_dark.alpha != 0.0 %}
        color: {{ tooltip_color_dark }};
      {% endif %}
    }
  {% endstyle %}
  {% capture deliveryTooltip %}
    {% if tooltip_icon_position == 'right' %}
      <span class="tooltip-text">
        {{ tooltip_text }}
      </span>
    {% endif %}
    {%- if tooltip_icon != 'none' -%}
      <span class="tooltip-delivery ltr pointer-events-auto tooltip-icon-{{ tooltip_icon_position }}{% if tooltip_icon != 'none' %} has-icon{% endif %} align-middle group inline">
        <span class="tooltip-icon w-[var(--font-size-normal-mobile)] md:w-[var(--font-size-medium)]">
          {% if custom_icon == blank %}
            {% render 'icon-labels-bags', icon: tooltip_icon %}
          {% else %}
            {{ custom_icon }}
          {% endif %}
        </span>
      </span>
    {% endif %}
    {% if tooltip_icon_position == 'left' %}
      <span class="tooltip-text">
        {{ tooltip_text }}
      </span>
    {% endif %}
  {% endcapture %}
{% endif %}
<div class="x-estimate-delivery{% if show_background %} pt-3 pb-3 pr-5 pl-5 lg:pl-7 lg:pr-7{% endif %}{% if box_type == 'round' %} rounded-md{% endif %}">
  <div class="flex relative{% if show_content_center %} justify-center{% endif %}">
    <div class="relative inline-block">
      <div class="absolute left-0 rtl:left-auto rtl:right-0 top-1/2 -translate-y-1/2 mr-2 rtl:ml-2 rtl:mr-0 w-[var(--font-size-large)]">{% render 'icon-labels-bags', icon: 'delivery-truck' %}</div>
      <div class="estimate-content {% if show_content_center %} text-center{% endif %} hover:pointer-events-auto pointer-events-none pl-8 rtl:pl-0 rtl:pr-8 p-break-words rte">
        {{ message | replace: 'earliest_delivery_date', min_date_string | replace: 'latest_delivery_date', max_date_string | replace: 'delivery_tooltip', deliveryTooltip }}
      </div>
      {% if message contains 'delivery_tooltip' and tooltip_message != blank %}
        <div 
          class="hidden hover:block shadow-[0_-4px_10px_-1px_rgba(var(--colors-text),.1)] tooltip-popup text-normal absolute bottom-full pl-5 pr-5 pt-3 pb-3 rounded-lg"
        >
          {{ tooltip_message | replace: 'earliest_delivery_date', min_date_string | replace: 'latest_delivery_date', max_date_string }}
        </div>
      {% endif %}
    </div>
  </div>
</div>