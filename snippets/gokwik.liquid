{% comment %} {% if settings.envType == 'production' %}
  {% assign env = 'pdp' %}
{% elsif settings.envType == 'sandbox' %}
  {% assign env = 'sandbox.pdp' %}
{% endif %}

{% if settings.goEnable %}
  <script>
    window.gaTag = {ga4: "{{ settings.ga4Gokwik }}"}
    window.merchantInfo  = {
            mid: "{{ settings.mid }}",
            environment: "{{ settings.envType }}",
            type: "merchantInfo",
      		storeId: "{{shop.id}}",
      		fbpixel: "{{settings.fbpixel}}",
          }
    var productFormSelector = '.form';
    var cart = {{ cart | json }}
    var templateName = '{{template.name}}'
  </script>

  <script src="https://{{ env }}.gokwik.co/merchant-integration/build/merchant.integration.js?v4" defer></script>

  <script>
    if ('${{ gaTag.ga4 }}' && '${{ gaTag.ga4 }}' !== 'undefined') {
        const script = document.createElement('script');
        script.src = "https://www.googletagmanager.com/gtag/js?id=${{ gaTag.ga4 }}";
        script.defer = true;
        document.head.appendChild(script);
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', {{ gaTag.ga4 }},{ 'groups': 'GA4','debug_mode':true });
    }
  </script>



  <script>
    window.addEventListener('gokwikLoaded', e => {
    var buyNowButton = document.getElementById('gokwik-buy-now');
if (buyNowButton) {
    buyNowButton.disabled = false;
    buyNowButton.classList.remove('disabled');
}
      var gokwikCheckoutButtons = document.querySelectorAll('.gokwik-checkout button');
gokwikCheckoutButtons.forEach(function(button) {
    button.disabled = false;
    button.classList.remove('disabled');
});
    //Do Not Touch This Line
    let clicked = false;
    let gokwikAdsID = "{{ settings.gkAdsConfig }}";
    const gokwikCheckoutEnable = (arrayOfElement) => {
      if (arrayOfElement.length === 0) return null;
      if (arrayOfElement.length > 1) {
        arrayOfElement.forEach(data => {
          if (data) {
            let targetElement = document.querySelectorAll(data);
            if (targetElement.length >= 1) {
              targetElement.forEach(element => {
                
                element.addEventListener("click", () => {
                  if (!clicked && gokwikAdsID) {
                    clicked = true;
                    gtag('event', 'conversion', {
                      'send_to': gokwikAdsID.toString().trim(),
                      'value': {{ order.total_price | divided_by: 100.0 }},
                      'currency': '{{ order.shop.currency }}',
                      'transaction_id': '{{ order.order_number }}'
                    });
                  }
                });
              });
            }
          }
        });
      }
    };
    gokwikCheckoutEnable(["#gokwik-buy-now",".gokwik-checkout button"])
    gokwikSdk.on('modal_closed', ()=>{
        clicked = false;
    })

    const targetElement = document.querySelector("body");
      function debounce(func, delay) {
        let timeoutId;
        return function () {
          const context = this;
          const args = arguments;
          clearTimeout(timeoutId);
          timeoutId = setTimeout(function () {
            func.apply(context, args);
          }, delay);
        };
      }

      const observer = new MutationObserver(() => {
       const addToCartButton = document.querySelector("button[name='add']");
const gokwikBuyNowButton = document.getElementById('gokwik-buy-now');

if (addToCartButton && addToCartButton.disabled) {
    gokwikBuyNowButton?.setAttribute('disabled', 'disabled');
} else {
    gokwikBuyNowButton?.removeAttribute('disabled');
}

         const homeSelector = document.querySelector('.sticky_add_to_cart #gokwik-buy-now');
    if(homeSelector){
    var disabledElements = document.querySelectorAll('.disabled');
      disabledElements.forEach(function (element) {
        element.removeAttribute('disabled');
        element.classList.remove('disabled');
      });
    }
        
        debouncedMyTimer();
      });

      const debouncedMyTimer = debounce(() => {
        observer.disconnect();
        //Do Not Touch this function
    
        gokwikCheckoutEnable(["#gokwik-buy-now",".gokwik-checkout button"])
        var gokwikCheckoutButtons = document.querySelectorAll('.gokwik-checkout button');
gokwikCheckoutButtons.forEach(function(button) {
    button.disabled = false;
    button.classList.remove('disabled');
});
        observer.observe(targetElement, { childList: true, subtree: true });
      }, 700);

      const config = { childList: true, subtree: true };
      observer.observe(targetElement, config);
    });
  </script>

{% endif %}

<style>
  {% if settings.goEnable %}
  .gokwik-checkout {
    width: 100%;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: end;
    margin-bottom: 0px;
  }
  .gokwik-checkout button {
    max-width:100%;
    width: 100%;
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    background: {{ settings.priClr }};
    position: relative;
    cursor: pointer;
    padding: 5px 10px;
    height:46px;
  }
  #gokwik-buy-now.disabled, .gokwik-disabled{
    opacity:0.5;
    cursor: not-allowed;
    }
    .gokwik-checkout button:focus {
    outline: none;
  }
  .gokwik-checkout button > span {
    display: flex;
  }
  .gokwik-checkout button > span.btn-text {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .gokwik-checkout button > span.btn-text > span:last-child {
  	padding-top: 0px;
      font-size: 10px;
      line-height: 10px;
      text-transform: initial;
  }
  .gokwik-checkout button > span.btn-text > span:first-child {
     font-size: 14px;
     font-weight: 600;
     text-transform: uppercase;
  }
  .gokwik-checkout button > span.pay-opt-icon img:first-child {
    margin-right: 10px;
    margin-left: 10px;
  }
  /*   Additional */
  .gokwik-checkout button.disabled{
    opacity:0.5;
    cursor: not-allowed;
    }
  .gokwik-checkout button.disabled .addloadr#btn-loader{
     display: flex!important;
  }
    #gokwik-buy-now.disabled .addloadr#btn-loader{
     display: flex!important;
  }
      #gokwik-buy-now:disabled{
     cursor: not-allowed;
  }

@media(max-width:425px){
   #gokwik-buy-now {
     font-size: 12.6px!important;
     /* max-height:40px; */
   }
}



  {% endif %}

  {% if settings.goBuynowEnable %}
   #gokwik-buy-now {
     background: {{ settings.btnBClr }};
     width: 100%;
     color: {{ settings.btnTextClr }};
     cursor: pointer;
     line-height: 1;
     border: none;
     padding: 15px 10px;
     font-size: 14px;
     position:relative;
     display: block !important;
     text-transform: uppercase;
     font-weight: 700;
     
   }


  {% endif %}
  /* Loader CSS */
    #btn-loader{
      display: none;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      justify-content: center;
      align-items: center;
      background:{{ settings.priClr }};
    }

  .cir-loader,
  .cir-loader:after {
    border-radius: 50%;
    width: 35px;
    height: 35px;
  }
  .cir-loader {
    margin: 6px auto;
    font-size: 10px;
    position: relative;
    text-indent: -9999em;
    border-top: 0.5em solid rgba(255, 255, 255, 0.2);
    border-right: 0.5em solid rgba(255, 255, 255, 0.2);
    border-bottom: 0.5em solid rgba(255, 255, 255, 0.2);
    border-left: 0.5em solid #ffffff;
    -webkit-transform: translateZ(0);
    -ms-transform: translateZ(0);
    transform: translateZ(0);
    -webkit-animation: load8 1.1s infinite linear;
    animation: load8 1.1s infinite linear;
  }
  @-webkit-keyframes load8 {
    0% {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }
  @keyframes load8 {
    0% {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate(360deg);
      transform: rotate(360deg);
    }
  }
</style>


 {% endcomment %}