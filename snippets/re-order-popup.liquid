{% liquid 
if settings.lang_direction contains request.locale.iso_code
  assign is_rtl = true
else
  assign is_rtl = false
endif
%}
<div 
  x-show="$store.xReOrder.show"
  x-cloak 
  class="reorder-popup flex items-end md:items-center fixed top-0 left-0 right-0 bottom-0 z-50 bg-[#acacac] bg-opacity-30">
  <div
    x-show="$store.xReOrder.show" 
    class="w-full page-width md:w-3/4 lg:w-3/5 max-w-[650px] pr-5 pl-5 pt-5 pb-5 lg:pt-8 lg:pb-10 relative lg:pl-8 lg:pr-8 lg:ml-auto lg:mr-auto bg-[rgba(var(--background-color),1)]{% if settings.edges_type == 'rounded_corners' %} rounded-[10px]{% endif %}"
    x-transition:enter="transition-all ease-in-out duration-300"
    x-transition:enter-start="opacity-0 transform md:-translate-x-1/3 translate-y-1/3 md:translate-y-0"
    x-transition:enter-end="opacity-100 transform md:translate-x-0 translate-y-0"
    x-transition:leave="transition-all ease-in-out duration-300"
    x-transition:leave-end="opacity-0 transform md:translate-x-1/3 translate-y-1/3 md:translate-y-0"
    @click.away="$store.xReOrder.closeReorderPopup()"
  >
    <button class="absolute cursor-pointer top-1 lg:top-3{% if is_rtl %} left-4 lg:left-6{% else %} right-4 lg:right-6{% endif %} pt-3 pb-3 pl-4 pr-4 h-11 w-11" @click="$store.xReOrder.closeReorderPopup()" aria-label="button-close">
      {% render 'icon-alls', icon: 'icon-close' %}
    </button>
    <p class="h6 text-medium pb-4 px-3">{{ 'customer.orders.order_number' | t }} <span x-text="$store.xReOrder.orderName"></span></p>
    
    <div class="px-3 relative bg-[rgba(var(--background-color),1)] overflow-y-auto overflow-x-hidden scrollbar-body max-h-[calc(85vh-96px)] md:max-h-[60vh]">
      <template x-for="(item,index) in Object.values(Alpine.store('xReOrder').itemsCart)" :key="index">
        <div class="flex relative pt-5 pb-5 border-b"
          :class="index == 0 && 'border-t'" 
          x-data="{ 
            item: JSON.parse(JSON.stringify(item))
          }">
          <div class="w-24 md:w-32 relative">
            <a x-bind:href="item.url" class="block disable-effect w-full">
              <div class="relative w-full overflow-hidden float-left before:h-0 before:block before:pb-[100.0%]">
                <img
                  x-show="item.image"
                  class="absolute top-0 right-0 left-0 bottom-0 object-cover h-full w-full image-hover" 
                  x-bind:src="`${ item.image }`"
                  loading="lazy" 
                  width="150"
                  height="auto"
                >
                <div class="bg-[#c9c9c9] absolute top-0 left-0 w-full h-full" x-show="!item.image">{%- render 'icon-placeholder', icon: 'icon-product', class: 'w-full h-full' %}</div>
              </div>
            </a>
          </div>
          <div class="px-5 flex-1{% if is_rtl %} lg:pl-0{% else %} lg:pr-0{% endif %}">
            <div>
              <a x-bind:href="item.url" class="text-[rgba(var(--colors-heading))] mr-0 duration-200 transition disable-effect hover-text-link p-break-words" x-text="item.title">
              </a>
              <p class="mt-2" x-show="item.disable">{{ 'products.product.unavailable' | t }}</p>
            </div>
            <div id="LineItemError" class="hidden bg-[rgba(var(--color-error),0.2)] cart-item__error mt-2 pt-3 pb-3 pr-3.5 pl-3.5 mb-3{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}" role="alert">
              <p class="flex relative w-full">
                <span class="absolute left-0 rtl:left-auto rtl:right-0 top-1/2 -translate-y-1/2 w-3">{% render 'icon-alls', icon: 'icon-error' %}</span>
                <span class="cart-item__error-text text-small pl-5 rtl:pl-0 rtl:pr-5"></span>
              </p>
            </div>
            <div class="cart-item__quantity mt-3"
              x-show="!item.disable"
              x-data="{
                qty: 1,
                minus(value) {
                  this.qty = parseInt(this.qty);
                  (this.qty == 0) ? this.qty = 0 : this.qty -= value;
                  Alpine.store('xReOrder').setItemsCart({...item, quantity: this.qty});
                },
                plus(value) {
                  this.qty = parseInt(this.qty);
                  this.qty += value;
                  Alpine.store('xReOrder').setItemsCart({...item, quantity: this.qty});
                },
                updateItemQty() {
                  Alpine.store('xReOrder').setItemsCart({...item, quantity: this.qty});
                },
                invalid(el) {
                  number = parseFloat(el.value);
                  if (!Number.isInteger(number) || number < 0) {
                    this.qty = 0;
                  } 
                }
              }"
              x-intersect="$nextTick(() => {
                qty = item.quantity;
              })"
            >
              <div class="flex items-center">
                <div class="relative flex w-28 h-10 border border-solid justify-between{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}">
                  <button
                    class="items-center w-1/3 justify-center flex no-js-hidden opacity-70 cursor-pointer"
                    name="minus" @click="minus(1)" aria-label="minus"
                  >
                    {% render 'icon-alls', icon: 'icon-minus', class: "w-3" %}
                  </button>
                  <input
                    :id="[`cart-qty-${ item.id }`]"
                    class="outer-spin-button w-1/3 background-header text-center pt-2 pb-2 placeholder:opacity-60 focus-within:outline-none"
                    type="number"
                    name="quantity"
                    value="1"
                    x-model="qty"
                    x-on:change="updateItemQty()"
                    x-on:blur="invalid($el)"
                    min="0"
                  />
                  <button
                    class="items-center w-1/3 justify-center flex opacity-70 cursor-pointer"
                    name="plus" @click="plus(1)" aria-label="plus"
                  >
                    {% render 'icon-alls', icon: 'icon-plus', class: "w-3" %}
                  </button>
                </div>
              </div> 
            </div>
          </div>
        </div>
      </template>
      <div class="inline-flex gap-2 relative w-full mt-2 py-3 px-3.5 bg-[rgba(var(--color-error),0.2)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}" x-show="$store.xReOrder.errorMessage">
        <span class="w-3 min-w-[12px]">{% render 'icon-alls', icon: 'icon-error' %}</span>
        <span class="cart-warning text-small"></span>
      </div>
    </div>
    <div class="px-3">
      <div class="inline-flex gap-2 relative w-full mt-2 py-3 px-3.5 bg-[rgba(var(--color-success),0.2)]" x-show="$store.xReOrder.clearSuccess">
        <span class="min-w-[12px] w-3 text-[rgba(var(--color-success))]">{% render 'icon-alls', icon: 'icon-success' %}</span>
        <span class="text-small">{{ 'sections.re-order.message_sussess' | t }}</span>
      </div>
    </div>
      <div class="px-3 mt-5{% if is_rtl %} text-left{% else %} text-right{% endif %}">
      <button 
        class="disable-effect relative"
        :class="$store.xReOrder.disableReorder && 'opacity-50 cursor-not-allowed'"
        @click="!$store.xReOrder.disableReorder && $store.xReOrder.clearCart()"
      >
        <span class="hover-text-link underline underline-offset-2" :class="$store.xReOrder.loadingClearCart && 'opacity-0'">{{ 'sections.re-order.clear_cart' | t }}</span>
        <div class="lg:inline-block animate-spin w-4 h-4 md:w-5 md:h-5 absolute top-[calc(50%-8px)] left-[calc(50%-8px)] md:top-[calc(50%-10px)] md:left-[calc(50%-10px)]" x-show="$store.xReOrder.loadingClearCart" x-cloak>
          {% render 'icon-alls', icon: 'icon-loading' %}
        </div>
      </button>
      <button 
        type="submit" 
        class="button button-solid py-2.5 px-5 lg:px-7 md:py-3 leading-normal{% if is_rtl %} mr-3{% else %} ml-3{% endif %}" 
        :class="$store.xReOrder.disableReorder && 'opacity-50 cursor-not-allowed'"
        @click.prevent="!$store.xReOrder.disableReorder && $store.xReOrder.handleAddToCart($el)"
      >
        <span :class="{ 'lg:block opacity-0 is-focus-button' : $store.xReOrder.loading }">
          {% assign button_label = 'products.product.add_all_to_cart' | t %}
          <span class="flex items-center justify-center">
            {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
          </span>
        </span>
        <div class="lg:inline-block animate-spin w-4 h-4 md:w-5 md:h-5 absolute top-[calc(50%-8px)] left-[calc(50%-8px)] md:top-[calc(50%-10px)] md:left-[calc(50%-10px)]" x-show="$store.xReOrder.loading" x-cloak>
          {% render 'icon-alls', icon: 'icon-loading' %}
        </div>
      </button>
    </div>
  </div>
</div>